<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.system.dept.dao.SysDepartmentMapper">

    <update id="deleteDepartmentBranch" parameterType="java.util.Map">
        update tb_sys_department
        set
        record_status = 0,
        modifier_account=#{account},
        modified_time = now()
        where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateDepartmentBatch" parameterType="java.util.Map" >
        update tb_sys_department
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="department_name =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.departmentName}
                </foreach>
            </trim>
            <trim prefix="modifier_account =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{account}
                </foreach>
            </trim>
            <trim prefix="modified_time =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then now()
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="getChildDepartmentByParentId" resultType="com.jn.system.dept.vo.SysDepartmentVO"
            parameterType="java.lang.String">
            SELECT
            id as `value`,
            department_name as label,
            parent_id as parentId,
            (SELECT
            department_name
            FROM tb_sys_department
            where id = t.parent_id) as parentName,
            `level`
            FROM
            `tb_sys_department` t
            where parent_id = #{id,jdbcType=VARCHAR}
            and `record_status` = 1
            ORDER BY created_time ASC;
    </select>

    <select id="getDepartmentAll" resultType="com.jn.system.dept.vo.SysDepartmentVO" parameterType="java.lang.String">
            SELECT
            id,
            t.id as `value`,
            t.department_name as label,
            t.department_name as departmentName,
            t.parent_id as parentId,
            t.`level`,
            t.created_time,
            tt.userAccount
            FROM
            `tb_sys_department` t
            LEFT JOIN
            (SELECT
            COUNT(t2.department_id) as userAccount,
            department_id
            FROM
            tb_sys_user t1,
            tb_sys_user_department_post t2
            WHERE t1.id = t2.user_id
            AND t1.record_status = 1
            AND t2.record_status = 1
            GROUP BY t2.department_id) tt
            ON t.id = tt.department_id
            WHERE t.`record_status` = 1
            <if test="@org.apache.commons.lang.StringUtils@isNotBlank(level)">
                and t.`level` = #{level,jdbcType=VARCHAR}
            </if>
            ORDER BY t.created_time ASC;
    </select>

    <select id="getDepartmentIds" resultType="java.lang.String">
        SELECT queryChildrenSysDepartmentInfo(#{id,jdbcType=VARCHAR}) <!--queryChildrenSysDepartmentInfo部门节点向下递归函数-->
    </select>

    <sql id="base_dept_columns">
         id,
         department_name as departmentName,
         parent_id as parentId,
         `level`,
         created_time as createdTime
    </sql>

    <select id="selectByPrimaryKey" resultType="com.jn.system.dept.vo.SysDepartmentVO" parameterType="java.lang.String">
        SELECT
        <include refid="base_dept_columns"/>
        FROM
        `tb_sys_department` t
        where id = #{id,jdbcType=VARCHAR}
        and `record_status` = 1
    </select>

    <resultMap id="BaseResultMap" type="com.jn.system.dept.vo.SysDepartmentVO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="value" jdbcType="VARCHAR" property="value" javaType="java.lang.String"/>
        <result column="departmentName" jdbcType="VARCHAR" property="departmentName" javaType="java.lang.String"/>
        <result column="label" jdbcType="VARCHAR" property="label" javaType="java.lang.String"/>
        <result column="parentId" jdbcType="VARCHAR" property="parentId" javaType="java.lang.String"/>
        <result column="level" jdbcType="VARCHAR" property="level" javaType="java.lang.String"/>
        <collection property="children" ofType="com.jn.system.dept.vo.SysDepartmentVO"
                    select="com.jn.system.dept.dao.SysDepartmentMapper.getChildDept" column="id"></collection>
    </resultMap>
    <select id="getChildDept" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="base_dept_columns"/>
        FROM
        `tb_sys_department` t
        where parent_id = #{id,jdbcType=VARCHAR}
        and `record_status` = 1
    </select>
</mapper>