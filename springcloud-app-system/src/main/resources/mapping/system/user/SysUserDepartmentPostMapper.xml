<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.system.dept.dao.SysUserDepartmentPostMapper">

    <select id="fingUserOfDepartment" parameterType="java.lang.String"
            resultType="com.jn.system.user.model.SysTUser">
        select u.id,u.`name`
        from tb_sys_user_department_post d , tb_sys_user u
        where d.user_id = u.id
        and d.`status` = '1' and u.`status` = '1'
        and d.department_id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="fingOtherUserByPage" parameterType="com.jn.system.dept.model.SysDepartmentUserPage"
            resultType="com.jn.system.user.model.SysTUser">
        select t.id,t.`name`
        from tb_sys_user t left join
        (select t1.id,t1.`name`
        from tb_sys_user t1,tb_sys_user_department_post t2
        where t1.id = t2.user_id and t1.id = t2.user_id and t1.`status` = '1'
        and t2.`status` = '1' and t2.department_id = #{departmentId,jdbcType=VARCHAR}) tt
        on t.id = tt.id where tt.id is null and t.`status` = '1'
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(name)">
            and t.`name` like CONCAT('%', #{name,jdbcType=VARCHAR},'%')
        </if>
    </select>

    <update id="deleteUserOfDepartment" parameterType="java.lang.String">
        update tb_sys_user_department_post set `status` = '-1' where department_id = #{id,jdbcType=VARCHAR}
    </update>

    <insert id="insert" parameterType="java.util.List">
        insert into tb_sys_user_department_post
        (id,user_id,department_id,post_id,is_default,creator,create_time,status)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT},
            #{item.userId,jdbcType=VARCHAR},
            #{item.departmentId,jdbcType=VARCHAR},
            #{item.postId,jdbcType=VARCHAR},
            #{item.isDefault,jdbcType=VARCHAR},
            #{item.creator,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.status,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="findUserByPostId" parameterType="java.lang.String"
            resultType="com.jn.system.user.model.SysTUser">
        select t2.id, t2.`name`
        from tb_sys_user_department_post t1 , tb_sys_user t2
        where t1.user_id = t2.id and t1.`status` = '1' and t2.`status` = '1'
        and post_id =  #{post_id,jdbcType=VARCHAR}
    </select>

    <update id="deletePostBranch" parameterType="java.lang.String">
        update tb_sys_user_department_post set status=-1
        where post_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="deleteDepartmentBranch" parameterType="java.lang.String">
        update tb_sys_user_department_post set status=-1
        where department_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="deleteUserBranch" parameterType="java.lang.String">
        update tb_sys_user_department_post set status=-1
        where user_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="findDepartmentId" parameterType="java.lang.String"
            resultType="com.jn.system.dept.entity.TbSysDepartment">
        SELECT
        T2.id,
        T2.department_name as departmentName,
        T2.parent_id as parentId,
        T2.creator,
        T2.create_time as createTime,
        T2.status,
        T2.level
        FROM (
        SELECT
        (SELECT @l:= LEVEL FROM tb_sys_department WHERE id = @r ) AS LEVEL,
        @r AS _id,
        (SELECT @r := parent_id FROM tb_sys_department WHERE id = _id) AS parent_id

        FROM
        (SELECT @r := #{id,jdbcType=VARCHAR} ) vars,
        tb_sys_department h
        WHERE @r != '0'  ) T1
        JOIN tb_sys_department T2
        ON T1._id = T2.id
        WHERE T1.level >=1
        ORDER BY T1.level asc;
    </select>

    <select id="findDepartmentAndPostByUserId" parameterType="java.lang.String"
            resultType="com.jn.system.dept.vo.SysDepartmentPostVO">
        select
            t2.id as departmentId,
            t2.department_name as departmentName,
            t2.parent_id as parentId,
            t2.`level`,
            t3.id as postId ,
            t3.post_name as postName,
            t1.user_id,
            t1.is_default as isDefault
            from tb_sys_user_department_post t1,tb_sys_department t2,
            tb_sys_post t3
            where
            t1.department_id = t2.id
            AND t1.post_id = t3.id
            and t1.`status` = '1'
            and t2.`status` = '1'
            and t3.`status` = '1'
            and t1.user_id = #{id,jdbcType=VARCHAR}
    </select>
</mapper>