<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.system.user.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.jn.system.user.vo.SysUserDepartmentPostVO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="record_status" jdbcType="TINYINT" property="recordStatus"/>

        <collection property="sysDepartmentPostVOList" ofType="com.jn.system.vo.SysDepartmentPostVO">
            <result property="departmentId" column="departmentId" jdbcType="VARCHAR"/>
            <result property="departmentName" column="department_name" jdbcType="VARCHAR"/>
            <result property="postId" column="postId" jdbcType="VARCHAR"/>
            <result property="postName" column="post_name" jdbcType="VARCHAR"/>
            <result property="parentId" column="parent_id" jdbcType="VARCHAR"/>
            <result property="level" column="level" jdbcType="VARCHAR"/>
            <result property="isDefault" column="is_default" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="Get_User_Page_Column">
        t.id,
        t.account,
        t.name,
        t.phone,
        t.email,
        t.record_status as recordStatus,
        t.remark,
        t.created_time as createdTime,
        t.wechat_account as wechatAccount,
        tt.department_name as departmentName,
        tt.post_name as postName,
        tt.postTypeName,
        tt.department_id,
        tt.is_default
    </sql>
    <sql id="Get_User_Column">
        t.id,
        t.account,
        t.name,
        t.phone,
        t.email,
        t.recordStatus,
        t.remark,
        date_format(t.createdTime,'%Y-%m-%d %H:%i:%s') as createdTime,
        t.wechatAccount,
        t.departmentName,
        t.postName,
        t.postTypeName,
        t.department_id
    </sql>

    <select id="findDepartmentAndPostByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        u.id,
        u.account,
        u.`name`,
        u.phone,
        u.email,
        u.created_time,
        u.`record_status`,
        tt.departmentId,
        tt.department_name,
        tt.postId,
        tt.post_name,
        tt.parent_id,
        tt.`level`
        from tb_sys_user u
        left join
        (select
        t2.id as departmentId,
        t2.department_name,
        t2.parent_id,
        t2.`level`,
        t3.id as postId ,
        t3.post_name,
        t1.user_id
        from tb_sys_user_department_post t1,
        tb_sys_department t2,
        tb_sys_post t3
        where t1.department_id = t2.id
        and t1.post_id = t3.id
        and t1.`record_status` = 1
        and t2.`record_status` = 1
        and t3.`record_status` = 1) tt
        on u.id = tt.user_id
        where u.id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="findSysUserByPage" resultType="com.jn.system.user.vo.SysUserVO"
            parameterType="com.jn.system.model.UserPage">
        select
        <include refid="Get_User_Column"></include>
        from
        (select
        <include refid="Get_User_Page_Column"/>
        from tb_sys_user t
        left join
        (select
        t1.department_name,
        t3.department_id,
        t2.post_name,
        (select post_type_name
        from tb_sys_post_type
        where id =  t2.post_type_id) as postTypeName,
        t3.user_id,
        t3.is_default
        from tb_sys_department t1
        ,tb_sys_post t2
        ,tb_sys_user_department_post t3
        where t1.id = t3.department_id
        and t2.id = t3.post_id
        and t1.record_status = 1
        and t2.record_status = 1
        and t3.record_status = 1
        <if test="@org.apache.commons.lang.StringUtils@isBlank(departmentId)">
            and t3.is_default = '1'
        </if>
        ) tt on t.id = tt.user_id
        where t.record_status != 0
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(name)">
            and t.`name` like CONCAT('%', #{name,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(phone)">
            and t.`phone` like CONCAT('%', #{phone,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(recordStatus)">
            and t.record_status = #{recordStatus,jdbcType=TINYINT}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(departmentId)">
            and tt.department_id = #{departmentId,jdbcType=VARCHAR}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(departmentId)">
            ORDER BY tt.is_default desc
        </if>
        ) t
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(departmentId)"> <!-- 对同一部门同一用户多个岗位信息去重 -->
            LEFT JOIN
            (SELECT t.id
            FROM tb_sys_user t
            INNER JOIN tb_sys_user_department_post tt
            ON t.id = tt.user_id
            where t.record_status != 0
            AND tt.department_id = #{departmentId,jdbcType=VARCHAR}
            AND tt.`record_status` = 1
            GROUP BY t.id
            HAVING COUNT(t.id) > 1) tt
            ON t.id = tt.id
            GROUP BY t.id
        </if>
        ORDER BY t.createdTime desc, t.id desc
    </select>

    <select id="getSysUserByPageAndPost" resultType="com.jn.system.user.vo.SysUserVO"
            parameterType="com.jn.system.model.UserPage">
        SELECT
        <include refid="Get_User_Column"></include>
        from
        (select distinct
        <include refid="Get_User_Page_Column"/>
        from tb_sys_user t
        left join
        (select
        t1.department_name,
        t3.department_id,
        t2.post_name,
        (select post_type_name
        from tb_sys_post_type
        where id =  t2.post_type_id) as postTypeName,
        t3.user_id,
        t3.is_default
        from tb_sys_department t1
        ,tb_sys_post t2
        ,tb_sys_user_department_post t3
        where t1.id = t3.department_id
        and t2.id = t3.post_id
        and t1.record_status = 1
        and t2.record_status = 1
        and t3.record_status = 1
        ) tt on t.id = tt.user_id
        where t.record_status != 0
        and tt.`post_name` like CONCAT('%', #{postOrTypeName,jdbcType=VARCHAR}, '%')
        UNION
        select distinct
        <include refid="Get_User_Page_Column"/>
        from tb_sys_user t
        left join
        (select
        t1.department_name,
        t3.department_id,
        t2.post_name,
        (select post_type_name
        from tb_sys_post_type
        where id =  t2.post_type_id) as postTypeName,
        t3.user_id,
        t3.is_default
        from tb_sys_department t1
        ,tb_sys_post t2
        ,tb_sys_user_department_post t3
        where t1.id = t3.department_id
        and t2.id = t3.post_id
        and t1.record_status = 1
        and t2.record_status = 1
        and t3.record_status = 1
        ) tt on t.id = tt.user_id
        where t.record_status != 0
        and tt.`postTypeName` like CONCAT('%', #{postOrTypeName,jdbcType=VARCHAR}, '%')) t
        <where>
            <if test="@org.apache.commons.lang.StringUtils@isNotBlank(name)">
                and t.`name` like CONCAT('%', #{name,jdbcType=VARCHAR}, '%')
            </if>
            <if test="@org.apache.commons.lang.StringUtils@isNotBlank(phone)">
                and t.`phone` like CONCAT('%', #{phone,jdbcType=VARCHAR}, '%')
            </if>
            <if test="@org.apache.commons.lang.StringUtils@isNotBlank(recordStatus)">
                and t.recordStatus = #{recordStatus,jdbcType=TINYINT}
            </if>
            <if test="@org.apache.commons.lang.StringUtils@isNotBlank(departmentId)">
                and t.department_id = #{departmentId,jdbcType=VARCHAR}
            </if>
        </where>
        GROUP BY t.id
        ORDER BY t.createdTime DESC,t.id DESC
    </select>

    <update id="deleteSysUser" parameterType="java.lang.String">
        update tb_sys_user
        set `record_status` = 0
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <insert id="addDepartmentAndPostToUserBatch" parameterType="java.util.List">
        insert into tb_sys_user_department_post
        (id, user_id,department_id,post_id,is_default,creator_account,created_time,record_status) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR},
            #{item.userId,jdbcType=VARCHAR},
            #{item.departmentId,jdbcType=VARCHAR},
            #{item.postId,jdbcType=VARCHAR},
            #{item.isDefault,jdbcType=VARCHAR},
            #{item.creatorAccount,jdbcType=VARCHAR},
            now(),
            #{item.recordStatus,jdbcType=TINYINT})
        </foreach>
    </insert>

    <select id="getUserById" resultType="com.jn.system.user.model.SysUser" parameterType="java.lang.String">
        SELECT id,account,`name`,phone,email,created_time as createdTime,`record_status` as recordStatus
        FROM tb_sys_user WHERE id = #{id,jdbcType=VARCHAR} and `record_status` != 1
    </select>

    <resultMap id="resultUserMap" type="com.jn.system.model.User">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="creator_account" jdbcType="VARCHAR" property="creatorAccount"/>
        <result column="record_status" jdbcType="TINYINT" property="recordStatus"/>
        <result column="wechat_account" jdbcType="VARCHAR" property="wechatAccount"/>

        <collection property="sysDepartmentPostVO" ofType="com.jn.system.vo.SysDepartmentPostVO">
            <result property="departmentId" column="department_id" jdbcType="VARCHAR"/>
            <result property="departmentName" column="department_name" jdbcType="VARCHAR"/>
            <result property="postId" column="post_id" jdbcType="VARCHAR"/>
            <result property="postName" column="post_name" jdbcType="VARCHAR"/>
            <result property="isDefault" column="is_default" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <select id="getUserAll" resultMap="resultUserMap">
        SELECT
        t.id,
        t.account,
        t.`name`,
        t.phone,
        t.email,
        t.creator_account,
        t.created_time,
        t.record_status,
        t.wechat_account,
        tt.department_id,
        tt.department_name,
        tt.is_default,
        tt.post_id,
        tt.post_name
        FROM
        `tb_sys_user` t
        LEFT JOIN
        (SELECT
        t1.user_id,
        t1.department_id,
        t1.post_id,
        t1.is_default,
        t2.department_name,
        t3.post_name
        FROM
        tb_sys_user_department_post t1,
        tb_sys_department t2,
        tb_sys_post t3
        WHERE t1.department_id = t2.id
        AND t1.post_id = t3.id
        AND t1.record_status = 1
        AND t2.record_status = 1
        AND t3.record_status = 1) tt
        ON t.id = tt.user_id
        WHERE t.record_status = 1
        ORDER BY t.created_time DESC
    </select>

    <update id="deleteUserBranch" parameterType="java.util.Map">
        update tb_sys_user
        set
        record_status = 0,
        modifier_account=#{account},
        modified_time = now()
        where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>