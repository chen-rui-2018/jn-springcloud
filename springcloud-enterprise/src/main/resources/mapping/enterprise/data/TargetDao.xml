<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.enterprise.data.dao.TargetDao">
    <select id="getTargetFromTab" resultType="com.jn.enterprise.data.entity.TbDataReportingTarget" parameterType="java.lang.String">
        select
         target_id targetId,
         parent_id parentId,
         order_number orderNumber,
         target_name targetName,
         department_id departmentId,
         department_name departmentName,
         is_muilt_row isMuiltRow,
         unit unit,
         target_type targetType,
         record_status recordStatus,
         creator_account creatorAccount,
         created_time createdTime,
         modifier_account modifierAccount,
         modified_time modifiedTime,
         target_comment targetComment
        from Tb_Data_Reporting_Target
        where target_id
        in (
          select target_id from tb_data_reporting_model_struct
          where tab_id =#{tabId}
        )

    </select>

    <insert id="createTab" parameterType="java.util.List">
        insert into Tb_Data_Reporting_Model_Tab
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingModelTabMapper.Base_Column_List"/>)
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            select
            #{item.tabId,jdbcType=VARCHAR},
            #{item.modelId,jdbcType=VARCHAR},
            #{item.tabName,jdbcType=VARCHAR},
            #{item.tabClumnTargetShow,jdbcType=CHAR},
            #{item.tabClumnType,jdbcType=TINYINT},
            #{item.status,jdbcType=TINYINT},
            #{item.tabCreateType,jdbcType=TINYINT},
            #{item.orderNumber,jdbcType=VARCHAR}
            from  dual
        </foreach>
    </insert>


    <insert id="createRelation" parameterType="java.util.List">
        insert into Tb_Data_Reporting_Model_Struct
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingModelStructMapper.Base_Column_List"/>)
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            select
            #{item.id,jdbcType=VARCHAR},
            #{item.targetId,jdbcType=VARCHAR},
            #{item.modelId,jdbcType=VARCHAR},
            #{item.tabId,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>

    <insert id="createInputFormater" parameterType="java.util.List">
        insert into Tb_Data_Reporting_Target_Group
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingTargetGroupMapper.Base_Column_List"/>)
        <foreach collection="inputFormatModelList" index="index" item="item" separator="UNION ALL">
            select
            #{item.formId,jdbcType=VARCHAR},
            #{item.targetId,jdbcType=VARCHAR},
            #{item.formType,jdbcType=VARCHAR},
            #{item.formName,jdbcType=VARCHAR},
            #{item.required,jdbcType=TINYINT},
            #{item.orderNumber,jdbcType=INTEGER},
            #{item.choiceOption,jdbcType=VARCHAR},
            #{item.recordStatus,jdbcType=TINYINT}
            from dual
        </foreach>
    </insert>

    <update id="updateDeadline" parameterType="java.lang.String">
      update tb_data_reporting_task t set
      t.fill_in_form_deadline=DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%'),
      t.is_overdue=
        <!--已上报，未逾期，如果截至日期大于填报日期；截至日期小于填报日期为逾期-->
        case when t.status= 0 and t.is_overdue= 0 then
        (case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt;= t.up_time then 0
        else 1 end)
        <!--已上报，已逾期，如果截至日期大于填报日期就修改为未逾期；截至日期小于填报日期为逾期-->
        when t.status= 0 and t.is_overdue= 1 then
        (
            case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt;=  t.up_time then 0
            else 1 end
        )
        <!--未上报，未逾期，如果新的截至日期大于旧的截至日期为未逾期，新的截至日期大于今日日期，且新的截至日期小于旧的
        截至日期时，为任务原来的状态；今日日期>新的截至日期为逾期
        ；截至日期小于填报日期为逾期-->
        when t.status= 1 and t.is_overdue= 0 then
        (
        case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt; t.fill_in_form_deadline  then 0
        when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt; DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%')
            and  DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &lt;  t.fill_in_form_deadline
        then 0
        else 1 end
        )

        <!--未上报，已逾期，如果新的截至日期大于今天日期：为未逾期；新的截至日期小于今日日期为逾期-->
        else
        (
        case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt; DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%')  then 0
        else 1 end
        )
        end

       ,
      t.overdue_day=(

        <!--已上报，未逾期，如果截至日期大于填报日期；截至日期小于填报日期为逾期-->
        case when t.status= 0 and t.is_overdue= 0 then
        (case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt;= t.up_time then 0
        else ceiling(datediff(t.up_time,DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%'))) end)

        <!--已上报，已逾期，如果截至日期大于填报日期就修改为未逾期；截至日期小于填报日期为逾期-->
        when t.status= 0 and t.is_overdue= 1 then
        (case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt;= t.up_time then 0
        else ceiling(datediff(t.up_time,DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%'))) end)

        <!--未上报，未逾期，如果新的截至日期大于旧的截至日期为未逾期，新的截至日期大于今日日期，且新的截至日期小于旧的
        截至日期时，为任务原来的状态；今日日期>新的截至日期为逾期
        ；截至日期小于填报日期为逾期-->
        when t.status= 1 and t.is_overdue= 0 then
        (
        case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt; t.fill_in_form_deadline  then 0

        when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt; DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%')
        and  DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &lt;  t.fill_in_form_deadline
        then 0
        else ceiling(datediff(DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%'),DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%')))  end
        )

        <!--未上报，已逾期，如果新的截至日期大于今天日期：为未逾期；新的截至日期小于今日日期为逾期-->
        else
        (
        case when DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%') &gt; DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%')  then 0
        else ceiling(datediff(DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%'),DATE_FORMAT(#{dealLine},'Y%-d%-m% H%-i%-s%'))) end
        )
        end

        )
        where t.task_batch=#{taskBatch} and t.model_id=#{modelId}
        and t.file_type =#{fileType}
    </update>

    <!--催报-->
    <update id="updateCalling" parameterType="java.lang.String">
        update tb_data_reporting_task t set
        t.calling_times = case when t.calling_times is null then 1
        else t.calling_times+1 end
        ,
        t.calling_time = DATE_FORMAT(SYSDATE(),'Y%-d%-m% H%-i%-s%')
        where
        t.task_batch=#{taskBatch} and t.model_id=#{modelId}
        and t.file_type =#{fileType}
    </update>


    <select id="getStatisticsModel" parameterType="com.jn.enterprise.data.model.CompanyDataStatisticsParamModel" resultType="com.jn.enterprise.data.model.CompanyDataStatisticsModel">

        select
         d.task_batch as taskBatch
        ,d.model_id as modelId
        ,d.noUpload as noUpload
        ,d.overdue as overdue
		,d.upload as upload
		,d.allTotal as allTotal
		,d.model_name as modelName
		,d.model_cycle as modelCycle
		,d.form_time as formTime
		,d.fill_in_form_deadline as fillInFormDeadline
		,d.calling_time as callingTime
		,d.warning_before_days as warningBeforeDays
        ,status as status
		from (
            select
             p.task_batch
            ,p.model_id
            ,r.total as noUpload <!--未上报，未逾期-->
            ,y.total as overdue <!--已上报，已经逾期-->
            ,u.total as upload <!--已上报，未逾期-->
            ,o.total as allTotal
            ,v.total as overdue_notfilled <!--未上报,已逾期-->
            ,t.model_name
            ,t.model_cycle
            ,p.form_time
            ,p.fill_in_form_deadline
            ,p.calling_time
            ,t.warning_before_days
            ,(
            case
            when u.total &gt; 0 then '逾期未上报'
            when r.total &gt; 0 then '待上报'
            when y.total &gt;0 then '逾期上报'
            when r.total=0  and d.overdue=0 and u.total = 0 then '已完成'
            else '未知状态' end
            ) as status
            from tb_data_reporting_snapshot_model t
            left join (
            select k.task_batch,k.model_id,k.form_time,k.fill_in_form_deadline , max(k.calling_time) as calling_time  from  tb_data_reporting_task k
            where k.record_status='1' and k.file_type=#{fileType} group by k.task_batch,k.model_id,k.form_time,k.fill_in_form_deadline

            ) p on t.model_id=p.model_id and t.task_batch = p.task_batch
            and t.task_batch = p.task_batch
            left join (
              select count(*) as total,task_batch ,model_id from tb_data_reporting_task k
              where k.record_status='1'  and k.file_type=#{fileType} group by k.task_batch,k.model_id
            ) o on t.model_id=o.model_id and t.task_batch = o.task_batch
            left join(
              <!--已上报，未逾期-->
              select count(*) as total,task_batch ,model_id from tb_data_reporting_task k where k.record_status='1'
              and  k.status='0' and k.is_overdue='0'  and k.file_type=#{fileType}  group by k.task_batch,k.model_id
            ) u on t.model_id=u.model_id and t.task_batch = u.task_batch
            left join(
              <!--已上报，已经逾期-->
              select count(*) as total,task_batch ,model_id from tb_data_reporting_task k where k.record_status='1'
              and  k.status='0' and k.is_overdue='1'  and k.file_type=#{fileType} group by k.task_batch,k.model_id
            ) y on t.model_id=y.model_id and t.task_batch = y.task_batch
            left join(
              <!--未上报，未逾期-->
              select count(*) as total,task_batch ,model_id from tb_data_reporting_task k where k.record_status='1'
              and  k.status='1'  and k.is_overdue='0'   and k.file_type=#{fileType} group by k.task_batch,k.model_id
            ) r on t.model_id=r.model_id and t.task_batch = r.task_batch

            left join(
            <!--未上报,已逾期-->
            select count(*) as total,task_batch ,model_id from tb_data_reporting_task k where k.record_status='1'
            and  k.status='1'  and k.is_overdue='1'   and k.file_type=#{fileType} group by k.task_batch,k.model_id
            ) v on t.model_id=v.model_id and t.task_batch = v.task_batch
          ) d

        where 1=1

        <if test="param.modelCycle !=null">
            and model_cycle=#{param.modelCycle}
        </if>

        <if test="param.modelName !=null">
            and model_name like CONCAT('%', #{param.modelName}, '%')
            #{param.modelName}
        </if>

        <if test="param.status !=null">
            and status =#{param.status}
        </if>

        <if test="param.formTime !=null">
            and form_time =#{param.formTime}
        </if>
    </select>

    <insert id="saveData" parameterType="java.util.List">
        insert into Tb_Data_Reporting_Model_Data
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingTaskDataMapper.Base_Column_List"/>)
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            select
            #{item.fallInFormId,jdbcType=VARCHAR},
            #{item.targetId,jdbcType=VARCHAR},
            #{item.modelId,jdbcType=VARCHAR},
            #{item.data,jdbcType=VARCHAR},
            #{item.formId,jdbcType=VARCHAR},
            #{item.tabId,jdbcType=VARCHAR},
            #{item.fillId,jdbcType=VARCHAR},
            #{item.rowNum,jdbcType=INTEGER}
            from dual
        </foreach>
    </insert>


    <select id="getThisMonthTask" resultType="com.jn.enterprise.data.model.CompanyDataModel">
        select
        w.fill_id as fillId
        ,w.model_id as modelId
        ,w.fill_in_form_id as fillInFormId
        ,w.is_overdue as isOverdue
        ,w.form_time as formTime
        ,w.filler as filler
        ,w.filler_tel as filleTel
        ,w.up_time as upTime
        ,w.calling_times as callingTimes
        ,w.calling_time as callingTime
        ,w.model_name as modelName
        ,w.model_cycle as modelCycle
        ,w.status as status
        from (
        select
        q.fill_id  ,q.model_id ,q.fill_in_form_id  ,q.is_overdue
        ,q.form_time  ,q.filler  ,q.filler_tel  ,q.up_time
        ,q.calling_times ,q.calling_time ,r.model_name ,r.model_cycle
        ,q.status
        from
        (
            select <include refid="com.jn.enterprise.data.dao.TbDataReportingTaskMapper.Base_Column_List" /> from tb_data_reporting_task t
            where t.fill_in_form_id in
            <foreach collection="fillInFormId" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            and

            t.form_time in
            <foreach collection="formTimeList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            and t.record_status=1
            and t.file_type=#{fileType}
            and (t.status = 1 or t.status =2)
        ) q
        left join (
        select <include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotModelMapper.Base_Column_List" /> from tb_data_reporting_snapshot_model t
        ) r on r.task_batch = q.task_batch

        ) w

        order by w.form_time desc
    </select>

    <select id="getHistoryTaskList" resultType="com.jn.enterprise.data.model.CompanyDataModel">

        select
        w.fill_id as fillId
        ,w.model_id as modelId
        ,w.fill_in_form_id as fillInFormId
        ,w.is_overdue as isOverdue
        ,w.form_time as formTime
        ,w.filler as filler
        ,w.filler_tel as filleTel
        ,w.up_time as upTime
        ,w.calling_times as callingTimes
        ,w.calling_time as callingTime
        ,w.model_name as modelName
        ,w.model_cycle as modelCycle
        ,w.status as status
        from (
            select
            q.fill_id  ,q.model_id ,q.fill_in_form_id  ,q.is_overdue
            ,q.form_time  ,q.filler  ,q.filler_tel  ,q.up_time
            ,q.calling_times ,q.status,q.calling_time ,r.model_name ,r.model_cycle
            from
            (
            select <include refid="com.jn.enterprise.data.dao.TbDataReportingTaskMapper.Base_Column_List" /> from tb_data_reporting_task t
            where t.fill_in_form_id in
            <foreach collection="fillInFormId" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            and
            t.record_status=1
            and
            t.file_type=#{fileType}

            ) q
            left join (
            select <include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotModelMapper.Base_Column_List" /> from tb_data_reporting_snapshot_model t
            ) r on r.task_batch = q.task_batch

        ) w
        where 1=1
        <!--条件-->
        <if test="param.modelName !=null">
            and w.model_name like CONCAT('%', #{param.modelName}, '%')

        </if>

        <if test="param.modelCycle !=null">
            and w.model_cycle = #{param.modelCycle}
        </if>
        <!--已填报，或以已逾期的为历史数据-->
        and (w.is_overdue=1 or w.status=0)
        order by w.form_time desc
    </select>


    <select id="getHistoryGardenTaskList" resultType="com.jn.enterprise.data.model.CompanyDataModel">
        select
        w.fill_id as fillId
        ,w.model_id as modelId
        ,w.fill_in_form_id as fillInFormId
        ,w.is_overdue as isOverdue
        ,w.form_time as formTime
        ,w.filler as filler
        ,w.filler_tel as filleTel
        ,w.up_time as upTime
        ,w.calling_times as callingTimes
        ,w.calling_time as callingTime
        ,w.model_name as modelName
        ,w.model_cycle as modelCycle
        ,w.status as status
        from (
        select
        q.fill_id  ,q.model_id ,q.fill_in_form_id  ,q.is_overdue
        ,q.form_time  ,q.filler  ,q.filler_tel  ,q.up_time
        ,q.calling_times ,q.status,q.calling_time ,r.model_name ,r.model_cycle
        from
        (
        select <include refid="com.jn.enterprise.data.dao.TbDataReportingTaskMapper.Base_Column_List" /> from tb_data_reporting_task t

        t.record_status=1
        and
        t.file_type=#{fileType}

        ) q
        left join (
        select <include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotModelMapper.Base_Column_List" /> from tb_data_reporting_snapshot_model t
        ) r on r.task_batch = q.task_batch

        ) w
        where 1=1
        <!--条件-->
        <if test="param.modelName !=null">
            and w.model_name like CONCAT('%', #{param.modelName}, '%')

        </if>

        <if test="param.modelCycle !=null">
            and w.model_cycle = #{param.modelCycle}
        </if>
        <!--已填报，或以已逾期的为历史数据-->
        and (w.is_overdue=1 or w.status=0)
        order by w.form_time desc

    </select>

    <!--查询审核数据列表-->
    <select id="getGardenCheckList" resultType="java.util.List" parameterType="com.jn.enterprise.data.model.GardenCheckParamModel">
        select
        w.modle_id as modleId
        ,w.model_name as modelName
        ,w.garden_examine_stauts as status
        ,w.form_time as formTime
        ,w.fill_id as filld
        ,w.filler as filler
        ,w.filler_tel as fillId
        ,w.up_time as upTime
        ,w.fill_in_form_name as fillInFormName
        ,w.task_batch as taskBatch
        from (
            select
                t.modle_id
                ,p.model_name
                ,t.garden_examine_stauts
                ,t.form_time
                ,t.fill_id
                ,t.filler
                ,t.filler_tel
                ,t.up_time
                ,t.fill_in_form_name
                ,t.task_batch
            from tb_data_reporting_task t
            left join (select
                modle_id,
                model_name,
                task_batch
                from tb_data_reporting_snapshot_model
            ) p on t.task_batch = p.task_batch and t.model_id = p.modle_id
            where t.status = 0 and t.file_type=2
        ) w

        where 1=1
        <!--条件-->
        <if test="param.modelName !=null">
            and w.model_name like CONCAT('%', #{param.modelName}, '%')
        </if>

        <if test="param.fillId !=null">
            and w.model_cycle = #{param.fillId}
        </if>

        <if test="param.formTime !=null">
            and w.form_time = #{param.formTime}
        </if>

        <if test="param.status !=null">
            and w.garden_examine_stauts = #{param.status}
        </if>


    </select>


    <!--批量保存任务-->
    <insert id="saveTaskList" parameterType="java.util.List">
        insert into Tb_Data_Reporting_Task
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingTaskMapper.Base_Column_List"/>)
        <foreach collection="tasks" index="index" item="item" separator="UNION ALL">
            select

            #{ item.fillId,jdbcType=VARCHAR},
            #{ item.fileType,jdbcType=TINYINT},
            #{ item.modelId,jdbcType=VARCHAR},
            #{ item.taskBatch,jdbcType=VARCHAR},
            #{ item.fillInFormId,jdbcType=VARCHAR},
            #{ item.fillInFormName,jdbcType=VARCHAR},
            #{ item.formTime,jdbcType=CHAR},
            #{ item.fillInFormDeadline,jdbcType=DATE},
            #{ item.status,jdbcType=TINYINT},
            #{ item.gardenExamineStauts,jdbcType=TINYINT},
            #{ item.callingTime,jdbcType=TIMESTAMP},
            #{ item.callingTimes,jdbcType=INTEGER},
            #{ item.filler,jdbcType=VARCHAR},
            #{ item.upTime,jdbcType=TIMESTAMP},
            #{ item.fillerTel,jdbcType=VARCHAR},
            #{ item.isOverdue,jdbcType=TINYINT},
            #{ item.overdueDays,jdbcType=INTEGER},
            #{ item.examineComment,jdbcType=VARCHAR},
            #{ item.createTime,jdbcType=TIMESTAMP},
            #{ item.recordStatus,jdbcType=TINYINT},
            #{ item.modifiedTime,jdbcType=TIMESTAMP},
            #{ item.modifiedAccount,jdbcType=VARCHAR}

            from dual
        </foreach>
    </insert>

    <!--固化tab信息-->
    <insert id="saveSnapTablist" parameterType="java.util.List">
        insert into tb_data_reporting_snapshot_model_tab
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotModelTabMapper.Base_Column_List"/>)
        <foreach collection="tabSnapList" index="index" item="item" separator="UNION ALL">
            select
            #{item.taskBatch,jdbcType=VARCHAR},
            #{item.modelId,jdbcType=VARCHAR},
            #{item.tabId,jdbcType=VARCHAR},
            #{item.tabName,jdbcType=VARCHAR},
            #{item.tabClumnTargetShow,jdbcType=CHAR},
            #{item.tabClumnType,jdbcType=TINYINT},
            #{item.status,jdbcType=TINYINT},
            #{item.tabCreateType,jdbcType=TINYINT},
            #{item.orderNumber,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>

    <!--固化关系-->
    <insert id="saveSnapshotModelStruct" parameterType="java.util.List">
        insert into tb_data_reporting_snapshot_model_struct
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotModelStructMapper.Base_Column_List"/>)

        <foreach collection="relations" index="index" item="item" separator="UNION ALL">
            select
            #{item.taskBatch,jdbcType=VARCHAR},
            #{item.targetId,jdbcType=VARCHAR},
            #{item.modelId,jdbcType=VARCHAR},
            #{item.tabId,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>
    <!--固化指标-->
    <insert id="saveSnapshotTarget" parameterType="java.util.List">
        insert into tb_data_reporting_snapshot_target
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotTargetMapper.Base_Column_List"/>)

        <foreach collection="targets" index="index" item="item" separator="UNION ALL" >
            select
            #{item.taskBatch,jdbcType=VARCHAR},
            #{item.targetId,jdbcType=VARCHAR},
            #{item.parentId,jdbcType=VARCHAR},
            #{item.orderNumber,jdbcType=INTEGER},
            #{item.targetName,jdbcType=VARCHAR},
            #{item.departmentId,jdbcType=VARCHAR},
            #{item.departmentName,jdbcType=VARCHAR},
            #{item.isMuiltRow,jdbcType=TINYINT},
            #{item.unit,jdbcType=VARCHAR},
            #{item.targetType,jdbcType=TINYINT},
            #{item.recordStatus,jdbcType=TINYINT},
            #{item.creatorAccount,jdbcType=VARCHAR},
            #{item.createdTime,jdbcType=TIMESTAMP},
            #{item.modifierAccount,jdbcType=VARCHAR},
            #{item.modifiedTime,jdbcType=TIMESTAMP},
            #{item.targetComment,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>


    <!--固化指标填写格式-->
    <insert id="saveSnapshotTargetGroup" parameterType="java.util.List">
        insert into tb_data_reporting_snapshot_target_group
        (<include refid="com.jn.enterprise.data.dao.TbDataReportingSnapshotTargetGroupMapper.Base_Column_List"/>)

        <foreach collection="targetGroups" index="index" item="item"  separator="UNION ALL" >
            select
            #{item.taskBatch,jdbcType=VARCHAR},
            #{item.targetId,jdbcType=VARCHAR},
            #{item.formId,jdbcType=VARCHAR},
            #{item.formType,jdbcType=VARCHAR},
            #{item.formName,jdbcType=VARCHAR},
            #{item.required,jdbcType=TINYINT},
            #{item.orderNumber,jdbcType=INTEGER},
            #{item.choiceOption,jdbcType=VARCHAR},
            #{item.recordStatus,jdbcType=TINYINT}
            FROM DUAL
        </foreach>
    </insert>

    <!--更新任务状态 nowDate-->
    <update id="updateTask" parameterType="java.lang.String">
        <!--未填报的/处于填报状态的，更新逾期以及逾期天数-->
        update tb_data_reporting_task t
        set
        t.is_overdue=1,
        t.overdue_days=ceiling(
        datediff(SYSDATE(),t.fill_in_form_deadline)- (select warning_before_days from tb_data_reporting_snapshot_model p where p.task_batch = t.task_batch)
        )
        where t.status !=0
        and t.fill_in_form_deadline &lt; SYSDATE()

        and ceiling( datediff(SYSDATE(),t.fill_in_form_deadline) ) &gt;
        (select warning_before_days from tb_data_reporting_snapshot_model p where p.task_batch = t.task_batch)
    </update>
    <!--更新任务状态 nowDate-->
    <select id="getWarningTask" resultType="com.jn.enterprise.data.model.WarningTaskModel">
        SELECT
        p.model_name modelName,
        CASE
        WHEN ceiling( datediff(  t.fill_in_form_deadline,SYSDATE( ) ) ) &lt; p.warning_before_days  and
        ceiling( datediff(  t.fill_in_form_deadline,SYSDATE( ) ) ) &gt; 0

        THEN
        ceiling( datediff(t.fill_in_form_deadline , SYSDATE() ) ) ELSE 0
        END AS inLine,

        CASE
        WHEN ceiling( datediff( SYSDATE( ), t.fill_in_form_deadline ) ) &gt; p.warning_before_days THEN
        ceiling( datediff( SYSDATE( ), t.fill_in_form_deadline ) ) ELSE 0
        END AS outLine,
        t.form_time as formTime,
        p.warning_by warningBy,
        t.file_type fileType,
        t.fill_in_form_id fillInFormId
        FROM
        tb_data_reporting_task t,
        tb_data_reporting_snapshot_model p
        WHERE
        t.STATUS != 0
        AND p.task_batch = t.task_batch
    </select>

    <!--获取园区广告-->
    <select id="getGardenTaskBatch" resultType="java.lang.String">

        select task_batch from
        tb_data_reporting_snapshot_model
        where
        task_batch in
        (
            select task_batch from tb_data_reporting_task
            where form_time=#{lastMon} or form_time=#{lastYear}
            and file_type=1
        )

        and model_id in
        (   select model_id from tb_data_reporting_snapshot_model_struct
            where target_id in (
                select target_Id from tb_data_reporting_snapshot_target
                where record_status=1 and department_id in

                <foreach collection="list" item="o" index="index" open="(" separator=","  close=")">
                    #{o}
                </foreach>
            )
        )
    </select>

    <select id="getGardenTask" resultType="com.jn.enterprise.data.model.CompanyDataModel">

        select
        w.fill_id as fillId
        ,w.model_id as modelId
        ,w.fill_in_form_id as fillInFormId
        ,w.is_overdue as isOverdue
        ,w.form_time as formTime
        ,w.filler as filler
        ,w.filler_tel as filleTel
        ,w.up_time as upTime
        ,w.calling_times as callingTimes
        ,w.calling_time as callingTime
        ,w.model_name as modelName
        ,w.model_cycle as modelCycle
        ,w.status as status
        from

        (
            select
            q.fill_id  ,q.model_id ,q.fill_in_form_id  ,q.is_overdue
            ,q.form_time  ,q.filler  ,q.filler_tel  ,q.up_time
            ,q.calling_times ,q.calling_time ,r.model_name ,r.model_cycle
            ,q.status
            from tb_data_reporting_task q , tb_data_reporting_snapshot_model r
            where
            t.task_batch in (
            <foreach collection="list" item="o" index="index" open="(" separator=","  close=")">
                #{o}
            </foreach>
            )
            and
            t.task_batch = r.task_batch
        ) w
        order by w.form_time desc

    </select>


</mapper>