<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.hr.employee.dao.TbManpowerBackgroundInvestMapper">
  <resultMap id="BaseResultMap" type="com.jn.hr.employee.entity.TbManpowerBackgroundInvest">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="identity_check" jdbcType="TINYINT" property="identityCheck" />
    <result column="education_check" jdbcType="TINYINT" property="educationCheck" />
    <result column="corporate_name" jdbcType="VARCHAR" property="corporateName" />
    <result column="corporate_job" jdbcType="VARCHAR" property="corporateJob" />
    <result column="company_certifier" jdbcType="VARCHAR" property="companyCertifier" />
    <result column="inspectors" jdbcType="VARCHAR" property="inspectors" />
    <result column="inspectors_phone" jdbcType="VARCHAR" property="inspectorsPhone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, identity_check, education_check, corporate_name, corporate_job, company_certifier, 
    inspectors, inspectors_phone
  </sql>
  <select id="selectByExample" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvestCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_manpower_background_invest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_manpower_background_invest
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_manpower_background_invest
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvestCriteria">
    delete from tb_manpower_background_invest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvest">
    insert into tb_manpower_background_invest (id, identity_check, education_check, 
      corporate_name, corporate_job, company_certifier, 
      inspectors, inspectors_phone)
    values (#{id,jdbcType=VARCHAR}, #{identityCheck,jdbcType=TINYINT}, #{educationCheck,jdbcType=TINYINT}, 
      #{corporateName,jdbcType=VARCHAR}, #{corporateJob,jdbcType=VARCHAR}, #{companyCertifier,jdbcType=VARCHAR}, 
      #{inspectors,jdbcType=VARCHAR}, #{inspectorsPhone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvest">
    insert into tb_manpower_background_invest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="identityCheck != null">
        identity_check,
      </if>
      <if test="educationCheck != null">
        education_check,
      </if>
      <if test="corporateName != null">
        corporate_name,
      </if>
      <if test="corporateJob != null">
        corporate_job,
      </if>
      <if test="companyCertifier != null">
        company_certifier,
      </if>
      <if test="inspectors != null">
        inspectors,
      </if>
      <if test="inspectorsPhone != null">
        inspectors_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="identityCheck != null">
        #{identityCheck,jdbcType=TINYINT},
      </if>
      <if test="educationCheck != null">
        #{educationCheck,jdbcType=TINYINT},
      </if>
      <if test="corporateName != null">
        #{corporateName,jdbcType=VARCHAR},
      </if>
      <if test="corporateJob != null">
        #{corporateJob,jdbcType=VARCHAR},
      </if>
      <if test="companyCertifier != null">
        #{companyCertifier,jdbcType=VARCHAR},
      </if>
      <if test="inspectors != null">
        #{inspectors,jdbcType=VARCHAR},
      </if>
      <if test="inspectorsPhone != null">
        #{inspectorsPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvestCriteria" resultType="java.lang.Long">
    select count(*) from tb_manpower_background_invest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_manpower_background_invest
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCheck != null">
        identity_check = #{record.identityCheck,jdbcType=TINYINT},
      </if>
      <if test="record.educationCheck != null">
        education_check = #{record.educationCheck,jdbcType=TINYINT},
      </if>
      <if test="record.corporateName != null">
        corporate_name = #{record.corporateName,jdbcType=VARCHAR},
      </if>
      <if test="record.corporateJob != null">
        corporate_job = #{record.corporateJob,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCertifier != null">
        company_certifier = #{record.companyCertifier,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectors != null">
        inspectors = #{record.inspectors,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectorsPhone != null">
        inspectors_phone = #{record.inspectorsPhone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_manpower_background_invest
    set id = #{record.id,jdbcType=VARCHAR},
      identity_check = #{record.identityCheck,jdbcType=TINYINT},
      education_check = #{record.educationCheck,jdbcType=TINYINT},
      corporate_name = #{record.corporateName,jdbcType=VARCHAR},
      corporate_job = #{record.corporateJob,jdbcType=VARCHAR},
      company_certifier = #{record.companyCertifier,jdbcType=VARCHAR},
      inspectors = #{record.inspectors,jdbcType=VARCHAR},
      inspectors_phone = #{record.inspectorsPhone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvest">
    update tb_manpower_background_invest
    <set>
      <if test="identityCheck != null">
        identity_check = #{identityCheck,jdbcType=TINYINT},
      </if>
      <if test="educationCheck != null">
        education_check = #{educationCheck,jdbcType=TINYINT},
      </if>
      <if test="corporateName != null">
        corporate_name = #{corporateName,jdbcType=VARCHAR},
      </if>
      <if test="corporateJob != null">
        corporate_job = #{corporateJob,jdbcType=VARCHAR},
      </if>
      <if test="companyCertifier != null">
        company_certifier = #{companyCertifier,jdbcType=VARCHAR},
      </if>
      <if test="inspectors != null">
        inspectors = #{inspectors,jdbcType=VARCHAR},
      </if>
      <if test="inspectorsPhone != null">
        inspectors_phone = #{inspectorsPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.hr.employee.entity.TbManpowerBackgroundInvest">
    update tb_manpower_background_invest
    set identity_check = #{identityCheck,jdbcType=TINYINT},
      education_check = #{educationCheck,jdbcType=TINYINT},
      corporate_name = #{corporateName,jdbcType=VARCHAR},
      corporate_job = #{corporateJob,jdbcType=VARCHAR},
      company_certifier = #{companyCertifier,jdbcType=VARCHAR},
      inspectors = #{inspectors,jdbcType=VARCHAR},
      inspectors_phone = #{inspectorsPhone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>