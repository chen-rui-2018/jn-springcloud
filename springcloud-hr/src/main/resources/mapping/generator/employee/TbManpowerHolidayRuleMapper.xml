<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.hr.employee.dao.TbManpowerHolidayRuleMapper">
  <resultMap id="BaseResultMap" type="com.jn.hr.employee.entity.TbManpowerHolidayRule">
    <id column="rule_id" jdbcType="VARCHAR" property="ruleId" />
    <result column="reached_year" jdbcType="INTEGER" property="reachedYear" />
    <result column="not_full_year" jdbcType="INTEGER" property="notFullYear" />
    <result column="annual_leave" jdbcType="INTEGER" property="annualLeave" />
    <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rule_id, reached_year, not_full_year, annual_leave, serial_number
  </sql>
  <select id="selectByExample" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRuleCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_manpower_holiday_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_manpower_holiday_rule
    where rule_id = #{ruleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_manpower_holiday_rule
    where rule_id = #{ruleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRuleCriteria">
    delete from tb_manpower_holiday_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRule">
    insert into tb_manpower_holiday_rule (rule_id, reached_year, not_full_year, 
      annual_leave, serial_number)
    values (#{ruleId,jdbcType=VARCHAR}, #{reachedYear,jdbcType=INTEGER}, #{notFullYear,jdbcType=INTEGER}, 
      #{annualLeave,jdbcType=INTEGER}, #{serialNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRule">
    insert into tb_manpower_holiday_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="reachedYear != null">
        reached_year,
      </if>
      <if test="notFullYear != null">
        not_full_year,
      </if>
      <if test="annualLeave != null">
        annual_leave,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ruleId != null">
        #{ruleId,jdbcType=VARCHAR},
      </if>
      <if test="reachedYear != null">
        #{reachedYear,jdbcType=INTEGER},
      </if>
      <if test="notFullYear != null">
        #{notFullYear,jdbcType=INTEGER},
      </if>
      <if test="annualLeave != null">
        #{annualLeave,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRuleCriteria" resultType="java.lang.Long">
    select count(*) from tb_manpower_holiday_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_manpower_holiday_rule
    <set>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=VARCHAR},
      </if>
      <if test="record.reachedYear != null">
        reached_year = #{record.reachedYear,jdbcType=INTEGER},
      </if>
      <if test="record.notFullYear != null">
        not_full_year = #{record.notFullYear,jdbcType=INTEGER},
      </if>
      <if test="record.annualLeave != null">
        annual_leave = #{record.annualLeave,jdbcType=INTEGER},
      </if>
      <if test="record.serialNumber != null">
        serial_number = #{record.serialNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_manpower_holiday_rule
    set rule_id = #{record.ruleId,jdbcType=VARCHAR},
      reached_year = #{record.reachedYear,jdbcType=INTEGER},
      not_full_year = #{record.notFullYear,jdbcType=INTEGER},
      annual_leave = #{record.annualLeave,jdbcType=INTEGER},
      serial_number = #{record.serialNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRule">
    update tb_manpower_holiday_rule
    <set>
      <if test="reachedYear != null">
        reached_year = #{reachedYear,jdbcType=INTEGER},
      </if>
      <if test="notFullYear != null">
        not_full_year = #{notFullYear,jdbcType=INTEGER},
      </if>
      <if test="annualLeave != null">
        annual_leave = #{annualLeave,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=INTEGER},
      </if>
    </set>
    where rule_id = #{ruleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.hr.employee.entity.TbManpowerHolidayRule">
    update tb_manpower_holiday_rule
    set reached_year = #{reachedYear,jdbcType=INTEGER},
      not_full_year = #{notFullYear,jdbcType=INTEGER},
      annual_leave = #{annualLeave,jdbcType=INTEGER},
      serial_number = #{serialNumber,jdbcType=INTEGER}
    where rule_id = #{ruleId,jdbcType=VARCHAR}
  </update>
</mapper>