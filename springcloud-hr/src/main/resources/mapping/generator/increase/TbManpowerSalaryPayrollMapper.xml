<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.hr.increase.dao.TbManpowerSalaryPayrollMapper">
  <resultMap id="BaseResultMap" type="com.jn.hr.increase.entity.TbManpowerSalaryPayroll">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="basic_wage" jdbcType="DOUBLE" property="basicWage" />
    <result column="seniority_wage" jdbcType="DOUBLE" property="seniorityWage" />
    <result column="technical_allowance" jdbcType="DOUBLE" property="technicalAllowance" />
    <result column="duty_allowance" jdbcType="DOUBLE" property="dutyAllowance" />
    <result column="work_subsidy" jdbcType="DOUBLE" property="workSubsidy" />
    <result column="education_allowance" jdbcType="DOUBLE" property="educationAllowance" />
    <result column="professional_title_allowance" jdbcType="DOUBLE" property="professionalTitleAllowance" />
    <result column="special_subsidy" jdbcType="DOUBLE" property="specialSubsidy" />
    <result column="meal_subsidy" jdbcType="DOUBLE" property="mealSubsidy" />
    <result column="deserve_wage" jdbcType="DOUBLE" property="deserveWage" />
    <result column="pending_socialpooling_Insurance" jdbcType="DOUBLE" property="pendingSocialpoolingInsurance" />
    <result column="pending_providentfund" jdbcType="DOUBLE" property="pendingProvidentfund" />
    <result column="pending_personal_tax" jdbcType="DOUBLE" property="pendingPersonalTax" />
    <result column="canteen_meal_fee" jdbcType="DOUBLE" property="canteenMealFee" />
    <result column="union_fee" jdbcType="DOUBLE" property="unionFee" />
    <result column="real_wage" jdbcType="DOUBLE" property="realWage" />
    <result column="account_entry_time" jdbcType="VARCHAR" property="accountEntryTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, job_number, department, basic_wage, seniority_wage, technical_allowance, 
    duty_allowance, work_subsidy, education_allowance, professional_title_allowance, 
    special_subsidy, meal_subsidy, deserve_wage, pending_socialpooling_Insurance, pending_providentfund, 
    pending_personal_tax, canteen_meal_fee, union_fee, real_wage, account_entry_time
  </sql>
  <select id="selectByExample" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayrollCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_manpower_salary_payroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_manpower_salary_payroll
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_manpower_salary_payroll
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayrollCriteria">
    delete from tb_manpower_salary_payroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayroll">
    insert into tb_manpower_salary_payroll (id, name, job_number, 
      department, basic_wage, seniority_wage, 
      technical_allowance, duty_allowance, work_subsidy, 
      education_allowance, professional_title_allowance, 
      special_subsidy, meal_subsidy, deserve_wage, 
      pending_socialpooling_Insurance, pending_providentfund, 
      pending_personal_tax, canteen_meal_fee, union_fee, 
      real_wage, account_entry_time)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{jobNumber,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{basicWage,jdbcType=DOUBLE}, #{seniorityWage,jdbcType=DOUBLE}, 
      #{technicalAllowance,jdbcType=DOUBLE}, #{dutyAllowance,jdbcType=DOUBLE}, #{workSubsidy,jdbcType=DOUBLE}, 
      #{educationAllowance,jdbcType=DOUBLE}, #{professionalTitleAllowance,jdbcType=DOUBLE}, 
      #{specialSubsidy,jdbcType=DOUBLE}, #{mealSubsidy,jdbcType=DOUBLE}, #{deserveWage,jdbcType=DOUBLE}, 
      #{pendingSocialpoolingInsurance,jdbcType=DOUBLE}, #{pendingProvidentfund,jdbcType=DOUBLE}, 
      #{pendingPersonalTax,jdbcType=DOUBLE}, #{canteenMealFee,jdbcType=DOUBLE}, #{unionFee,jdbcType=DOUBLE}, 
      #{realWage,jdbcType=DOUBLE}, #{accountEntryTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayroll">
    insert into tb_manpower_salary_payroll
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="basicWage != null">
        basic_wage,
      </if>
      <if test="seniorityWage != null">
        seniority_wage,
      </if>
      <if test="technicalAllowance != null">
        technical_allowance,
      </if>
      <if test="dutyAllowance != null">
        duty_allowance,
      </if>
      <if test="workSubsidy != null">
        work_subsidy,
      </if>
      <if test="educationAllowance != null">
        education_allowance,
      </if>
      <if test="professionalTitleAllowance != null">
        professional_title_allowance,
      </if>
      <if test="specialSubsidy != null">
        special_subsidy,
      </if>
      <if test="mealSubsidy != null">
        meal_subsidy,
      </if>
      <if test="deserveWage != null">
        deserve_wage,
      </if>
      <if test="pendingSocialpoolingInsurance != null">
        pending_socialpooling_Insurance,
      </if>
      <if test="pendingProvidentfund != null">
        pending_providentfund,
      </if>
      <if test="pendingPersonalTax != null">
        pending_personal_tax,
      </if>
      <if test="canteenMealFee != null">
        canteen_meal_fee,
      </if>
      <if test="unionFee != null">
        union_fee,
      </if>
      <if test="realWage != null">
        real_wage,
      </if>
      <if test="accountEntryTime != null">
        account_entry_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="basicWage != null">
        #{basicWage,jdbcType=DOUBLE},
      </if>
      <if test="seniorityWage != null">
        #{seniorityWage,jdbcType=DOUBLE},
      </if>
      <if test="technicalAllowance != null">
        #{technicalAllowance,jdbcType=DOUBLE},
      </if>
      <if test="dutyAllowance != null">
        #{dutyAllowance,jdbcType=DOUBLE},
      </if>
      <if test="workSubsidy != null">
        #{workSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="educationAllowance != null">
        #{educationAllowance,jdbcType=DOUBLE},
      </if>
      <if test="professionalTitleAllowance != null">
        #{professionalTitleAllowance,jdbcType=DOUBLE},
      </if>
      <if test="specialSubsidy != null">
        #{specialSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="mealSubsidy != null">
        #{mealSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="deserveWage != null">
        #{deserveWage,jdbcType=DOUBLE},
      </if>
      <if test="pendingSocialpoolingInsurance != null">
        #{pendingSocialpoolingInsurance,jdbcType=DOUBLE},
      </if>
      <if test="pendingProvidentfund != null">
        #{pendingProvidentfund,jdbcType=DOUBLE},
      </if>
      <if test="pendingPersonalTax != null">
        #{pendingPersonalTax,jdbcType=DOUBLE},
      </if>
      <if test="canteenMealFee != null">
        #{canteenMealFee,jdbcType=DOUBLE},
      </if>
      <if test="unionFee != null">
        #{unionFee,jdbcType=DOUBLE},
      </if>
      <if test="realWage != null">
        #{realWage,jdbcType=DOUBLE},
      </if>
      <if test="accountEntryTime != null">
        #{accountEntryTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayrollCriteria" resultType="java.lang.Long">
    select count(*) from tb_manpower_salary_payroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_manpower_salary_payroll
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.jobNumber != null">
        job_number = #{record.jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.basicWage != null">
        basic_wage = #{record.basicWage,jdbcType=DOUBLE},
      </if>
      <if test="record.seniorityWage != null">
        seniority_wage = #{record.seniorityWage,jdbcType=DOUBLE},
      </if>
      <if test="record.technicalAllowance != null">
        technical_allowance = #{record.technicalAllowance,jdbcType=DOUBLE},
      </if>
      <if test="record.dutyAllowance != null">
        duty_allowance = #{record.dutyAllowance,jdbcType=DOUBLE},
      </if>
      <if test="record.workSubsidy != null">
        work_subsidy = #{record.workSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="record.educationAllowance != null">
        education_allowance = #{record.educationAllowance,jdbcType=DOUBLE},
      </if>
      <if test="record.professionalTitleAllowance != null">
        professional_title_allowance = #{record.professionalTitleAllowance,jdbcType=DOUBLE},
      </if>
      <if test="record.specialSubsidy != null">
        special_subsidy = #{record.specialSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="record.mealSubsidy != null">
        meal_subsidy = #{record.mealSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="record.deserveWage != null">
        deserve_wage = #{record.deserveWage,jdbcType=DOUBLE},
      </if>
      <if test="record.pendingSocialpoolingInsurance != null">
        pending_socialpooling_Insurance = #{record.pendingSocialpoolingInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.pendingProvidentfund != null">
        pending_providentfund = #{record.pendingProvidentfund,jdbcType=DOUBLE},
      </if>
      <if test="record.pendingPersonalTax != null">
        pending_personal_tax = #{record.pendingPersonalTax,jdbcType=DOUBLE},
      </if>
      <if test="record.canteenMealFee != null">
        canteen_meal_fee = #{record.canteenMealFee,jdbcType=DOUBLE},
      </if>
      <if test="record.unionFee != null">
        union_fee = #{record.unionFee,jdbcType=DOUBLE},
      </if>
      <if test="record.realWage != null">
        real_wage = #{record.realWage,jdbcType=DOUBLE},
      </if>
      <if test="record.accountEntryTime != null">
        account_entry_time = #{record.accountEntryTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_manpower_salary_payroll
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      job_number = #{record.jobNumber,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      basic_wage = #{record.basicWage,jdbcType=DOUBLE},
      seniority_wage = #{record.seniorityWage,jdbcType=DOUBLE},
      technical_allowance = #{record.technicalAllowance,jdbcType=DOUBLE},
      duty_allowance = #{record.dutyAllowance,jdbcType=DOUBLE},
      work_subsidy = #{record.workSubsidy,jdbcType=DOUBLE},
      education_allowance = #{record.educationAllowance,jdbcType=DOUBLE},
      professional_title_allowance = #{record.professionalTitleAllowance,jdbcType=DOUBLE},
      special_subsidy = #{record.specialSubsidy,jdbcType=DOUBLE},
      meal_subsidy = #{record.mealSubsidy,jdbcType=DOUBLE},
      deserve_wage = #{record.deserveWage,jdbcType=DOUBLE},
      pending_socialpooling_Insurance = #{record.pendingSocialpoolingInsurance,jdbcType=DOUBLE},
      pending_providentfund = #{record.pendingProvidentfund,jdbcType=DOUBLE},
      pending_personal_tax = #{record.pendingPersonalTax,jdbcType=DOUBLE},
      canteen_meal_fee = #{record.canteenMealFee,jdbcType=DOUBLE},
      union_fee = #{record.unionFee,jdbcType=DOUBLE},
      real_wage = #{record.realWage,jdbcType=DOUBLE},
      account_entry_time = #{record.accountEntryTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayroll">
    update tb_manpower_salary_payroll
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="basicWage != null">
        basic_wage = #{basicWage,jdbcType=DOUBLE},
      </if>
      <if test="seniorityWage != null">
        seniority_wage = #{seniorityWage,jdbcType=DOUBLE},
      </if>
      <if test="technicalAllowance != null">
        technical_allowance = #{technicalAllowance,jdbcType=DOUBLE},
      </if>
      <if test="dutyAllowance != null">
        duty_allowance = #{dutyAllowance,jdbcType=DOUBLE},
      </if>
      <if test="workSubsidy != null">
        work_subsidy = #{workSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="educationAllowance != null">
        education_allowance = #{educationAllowance,jdbcType=DOUBLE},
      </if>
      <if test="professionalTitleAllowance != null">
        professional_title_allowance = #{professionalTitleAllowance,jdbcType=DOUBLE},
      </if>
      <if test="specialSubsidy != null">
        special_subsidy = #{specialSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="mealSubsidy != null">
        meal_subsidy = #{mealSubsidy,jdbcType=DOUBLE},
      </if>
      <if test="deserveWage != null">
        deserve_wage = #{deserveWage,jdbcType=DOUBLE},
      </if>
      <if test="pendingSocialpoolingInsurance != null">
        pending_socialpooling_Insurance = #{pendingSocialpoolingInsurance,jdbcType=DOUBLE},
      </if>
      <if test="pendingProvidentfund != null">
        pending_providentfund = #{pendingProvidentfund,jdbcType=DOUBLE},
      </if>
      <if test="pendingPersonalTax != null">
        pending_personal_tax = #{pendingPersonalTax,jdbcType=DOUBLE},
      </if>
      <if test="canteenMealFee != null">
        canteen_meal_fee = #{canteenMealFee,jdbcType=DOUBLE},
      </if>
      <if test="unionFee != null">
        union_fee = #{unionFee,jdbcType=DOUBLE},
      </if>
      <if test="realWage != null">
        real_wage = #{realWage,jdbcType=DOUBLE},
      </if>
      <if test="accountEntryTime != null">
        account_entry_time = #{accountEntryTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.hr.increase.entity.TbManpowerSalaryPayroll">
    update tb_manpower_salary_payroll
    set name = #{name,jdbcType=VARCHAR},
      job_number = #{jobNumber,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      basic_wage = #{basicWage,jdbcType=DOUBLE},
      seniority_wage = #{seniorityWage,jdbcType=DOUBLE},
      technical_allowance = #{technicalAllowance,jdbcType=DOUBLE},
      duty_allowance = #{dutyAllowance,jdbcType=DOUBLE},
      work_subsidy = #{workSubsidy,jdbcType=DOUBLE},
      education_allowance = #{educationAllowance,jdbcType=DOUBLE},
      professional_title_allowance = #{professionalTitleAllowance,jdbcType=DOUBLE},
      special_subsidy = #{specialSubsidy,jdbcType=DOUBLE},
      meal_subsidy = #{mealSubsidy,jdbcType=DOUBLE},
      deserve_wage = #{deserveWage,jdbcType=DOUBLE},
      pending_socialpooling_Insurance = #{pendingSocialpoolingInsurance,jdbcType=DOUBLE},
      pending_providentfund = #{pendingProvidentfund,jdbcType=DOUBLE},
      pending_personal_tax = #{pendingPersonalTax,jdbcType=DOUBLE},
      canteen_meal_fee = #{canteenMealFee,jdbcType=DOUBLE},
      union_fee = #{unionFee,jdbcType=DOUBLE},
      real_wage = #{realWage,jdbcType=DOUBLE},
      account_entry_time = #{accountEntryTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>