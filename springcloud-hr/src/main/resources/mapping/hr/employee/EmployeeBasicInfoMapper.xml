<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.hr.employee.dao.EmployeeBasicInfoMapper">
    <select id="list" parameterType="com.jn.hr.employee.model.EmployeeBasicInfoPage"
            resultType="com.jn.hr.employee.model.EmployeeBasicInfo">
        SELECT
        id, employee_portrait, `name`, sex, phone, mailbox, department_id, department_name,
        job_id, job_name, certificate_id, certificate_type, certificate_number, post_id,
        post_name, job_number, contract_id, contract_name, employee_type, entry_date, birth_date,
        nationality_id, nationality_name, work_address, contact_address, certificate_name,
        nation, registered_type, registered_residence, native_place, residential_address,
        highest_academic, political_outlook, marital_status, emergency_contact_name, emergency_contact_phone,
        QQ, wechat, start_current, end_current, work_mailbox, work_phone, expiration_date,
        probation_period, record_status, creator_account, created_time, modifier_account,
        modified_time,employ_status, user_id, user_account
        FROM
        `tb_manpower_employee_basic_info`
        WHERE record_status=1
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(name)">
            and `name` like concat('%',#{name},'%')
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(jobId)">
            and job_id=#{jobId}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(postId)">
            and post_id=#{postId}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(employeeType)">
            and employee_type=#{employeeType}
        </if>
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
        ORDER BY created_time DESC
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tb_manpower_employee_basic_info
        (
        id, employee_portrait, `name`, sex, phone, mailbox, department_id, department_name,
        job_id, job_name, certificate_id, certificate_type, certificate_number, post_id,
        post_name, job_number, contract_id, contract_name, employee_type, entry_date, birth_date,
        nationality_id, nationality_name, work_address, contact_address, certificate_name,
        nation, registered_type, registered_residence, native_place, residential_address,
        highest_academic, political_outlook, marital_status, emergency_contact_name, emergency_contact_phone,
        QQ, wechat, start_current, end_current, work_mailbox, work_phone, expiration_date,
        probation_period, record_status, creator_account, created_time, modifier_account,
        modified_time,employ_status,user_id,user_account
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.employeePortrait},
            #{item.name},
            #{item.sex},
            #{item.phone},
            #{item.mailbox},
            #{item.departmentId},
            #{item.departmentName},
            #{item.jobId},
            #{item.jobName},
            #{item.certificateId},
            #{item.certificateType},
            #{item.certificateNumber},
            #{item.postId},
            #{item.postName},
            #{item.jobNumber},
            #{item.contractId},
            #{item.contractName},
            #{item.employeeType},
            #{item.entryDate},
            #{item.birthDate},
            #{item.nationalityId},
            #{item.nationalityName},
            #{item.workAddress},
            #{item.contactAddress},
            #{item.certificateName},
            #{item.nation},
            #{item.registeredType},
            #{item.registeredResidence},
            #{item.nativePlace},
            #{item.residentialAddress},
            #{item.highestAcademic},
            #{item.politicalOutlook},
            #{item.maritalStatus},
            #{item.emergencyContactName},
            #{item.emergencyContactPhone},
            #{item.qq},
            #{item.wechat},
            #{item.startCurrent},
            #{item.endCurrent},
            #{item.workMailbox},
            #{item.workPhone},
            #{item.expirationDate},
            #{item.probationPeriod},
            #{item.recordStatus},
            #{item.creatorAccount},
            #{item.createdTime},
            #{item.modifierAccount},
            #{item.modifiedTime},
            #{item.employStatus},
            #{item.userId},
            #{item.userAccount}
            )
        </foreach>
    </insert>

    <select id="statByEmployeeType" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
        select case when employee_type='1' then '正式' else '实习生' end  name,count(1) value  from tb_manpower_employee_basic_info
        where record_status=1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>

         group by employee_type order by employee_type asc
    </select>

    <select id="statByEmployeeCompanyDate" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
        <![CDATA[
        SELECT t4. NAME,count(1) VALUE ,
        case when t4.name='3个月内' then 1
         when t4.name='6个月内' then 2
         when t4.name='6个月-1年' then 3
         when t4.name='1-3年' then 4
         when t4.name='3-5年' then 5
         when t4.name='5-10年' then 6
         when t4.name='10-15年' then 7
         when t4.name='15年以上' then 8
        else 9 end seqno
        FROM
	  (
		SELECT
			CASE
		WHEN t3.diff = 0 THEN
			'未填写'
		WHEN t3.diff <= 3 THEN
			'3个月内'
		WHEN t3.diff <= 6 THEN
			'6个月内'
		WHEN t3.diff <= 12 THEN
			'6个月-1年'
		WHEN t3.diff <= 36 THEN
			'1-3年'
		WHEN t3.diff <= 60 THEN
			'3-5年'
		WHEN t3.diff <= 120 THEN
			'5-10年'
		WHEN t3.diff <= 180 THEN
			'10-15年'
		ELSE
			'15年以上'
		END NAME
		]]>
		FROM
			(
				SELECT
					t1.job_number,
					TIMESTAMPDIFF(
						MONTH,
						ifnull(min(t2.entry_date), now()),
						NOW()
					) AS diff
				FROM
					tb_manpower_employee_basic_info t1
				LEFT JOIN tb_manpower_work_experience t2 ON t1.job_number = t2.job_number
				where t1.record_status=1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
				GROUP BY
					t1.job_number
			) t3
        ) t4
        GROUP BY
        t4. NAME order by seqno asc

    </select>

    <select id="statByEmployeePostName" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
         select job_name name,count(1) value,
         case when post_name='普通员工' then 1
         when job_name='中层干部' then 2
         else 3 end seqno
    from tb_manpower_employee_basic_info where record_status=1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
         group by job_name order by seqno asc
    </select>

    <select id="statByEmployeeSex" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
           select  case  when sex=1 then '男' else '女' end name ,count(1) value  from tb_manpower_employee_basic_info
           where record_status=1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
         group by sex order by name desc
    </select>

    <select id="statByEmployeeAcademic" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
         select count(1) value,
            case when highest_academic='1' then '博士'
            when highest_academic='2' then '硕士'
            when highest_academic='3' then '本科'
            when highest_academic='4' then '专科'
            when highest_academic='5' then '高中(中专)'
            when highest_academic='6' then '初中'
            when highest_academic='7' then '小学'
            else '未知' end name,highest_academic seq
        from tb_manpower_employee_basic_info where record_status=1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
         group by highest_academic order by seq asc
    </select>

    <select id="statByEmployeeAge" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
        <![CDATA[
        SELECT t3. NAME,count(1) VALUE,
        case when t3.NAME ='18岁以下' then 1
        when t3.NAME ='18-25岁' then 2
        when t3.NAME ='26-30岁' then 3
        when t3.NAME ='31-35岁' then 4
        when t3.NAME ='36-40岁' then 5
        when t3.NAME ='41-50岁' then 6
        when t3.NAME ='51-60岁' then 7
        else 8 end seqno
        FROM
        (
        SELECT
        CASE
        WHEN t2.diff <= 18 THEN
        '18岁以下'
        WHEN t2.diff <= 25 THEN
        '18-25岁'
        WHEN t2.diff <= 30 THEN
        '26-30岁'
        WHEN t2.diff <= 35 THEN
        '31-35岁'
        WHEN t2.diff <= 40 THEN
        '36-40岁'
        WHEN t2.diff <= 50 THEN
        '41-50岁'
        WHEN t2.diff <= 60 THEN
        '51-60岁'
        ELSE
        '60岁以上'
        END NAME
        ]]>
        FROM
        (
        SELECT
        TIMESTAMPDIFF(YEAR, t1.birth_date, NOW()) AS diff
        FROM
        tb_manpower_employee_basic_info t1
        WHERE
        record_status = 1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
        ) t2
        ) t3
        GROUP BY
        t3. NAME order by seqno asc

    </select>

    <select id="statByEmployeeDepartment" parameterType="map" resultType="com.jn.hr.employee.model.KeyValue">
         select department_name name,count(1) value from tb_manpower_employee_basic_info where record_status=1
        <if test="departmentIds!=null and departmentIds.size>0">
            and department_id in
            <foreach collection="departmentIds" item="depart" open="(" close=")" separator=",">
                #{depart}
            </foreach>

        </if>
         group by department_name order by value desc
    </select>
    
    <select id="selectByJobNumber" parameterType="java.lang.String"
         resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
         SELECT
        t1.id, t1.employee_portrait, t1.`name`,
      t1.sex, t1.phone, t1.mailbox,
      t1.department_id, t1.department_name, t1.job_id,
      t1.job_name, t1.certificate_id, t1.certificate_type,
      t1.certificate_number, t1.post_id, t1.post_name,
      t1.job_number, t1.contract_id, t1.contract_name,
      t1.employee_type, t1.entry_date, t1.birth_date,
      t1.nationality_id, t1.nationality_name, t1.work_address,
      t1.contact_address, t1.certificate_name, t1.nation,
      t1.registered_type, t1.registered_residence, t1.native_place,
      t1.residential_address, t1.highest_academic, t1.political_outlook,
      t1.marital_status, t1.emergency_contact_name, t1.emergency_contact_phone,
      t1.QQ, t1.wechat, t1.start_current,
      t1.end_current, t1.work_mailbox, t1.work_phone,
      t1.expiration_date, t1.probation_period, t1.record_status,
      t1.creator_account, t1.created_time, t1.modifier_account,
      t1.modified_time,t1.user_id,t1.user_account
        FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0 and t1.job_number =#{jobNumber,jdbcType=VARCHAR}
     </select>

    <select id="selectByPhone" parameterType="map"
            resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
         SELECT
        t1.id, t1.employee_portrait, t1.`name`,
      t1.sex, t1.phone, t1.mailbox,
      t1.department_id, t1.department_name, t1.job_id,
      t1.job_name, t1.certificate_id, t1.certificate_type,
      t1.certificate_number, t1.post_id, t1.post_name,
      t1.job_number, t1.contract_id, t1.contract_name,
      t1.employee_type, t1.entry_date, t1.birth_date,
      t1.nationality_id, t1.nationality_name, t1.work_address,
      t1.contact_address, t1.certificate_name, t1.nation,
      t1.registered_type, t1.registered_residence, t1.native_place,
      t1.residential_address, t1.highest_academic, t1.political_outlook,
      t1.marital_status, t1.emergency_contact_name, t1.emergency_contact_phone,
      t1.QQ, t1.wechat, t1.start_current,
      t1.end_current, t1.work_mailbox, t1.work_phone,
      t1.expiration_date, t1.probation_period, t1.record_status,
      t1.creator_account, t1.created_time, t1.modifier_account,
      t1.modified_time,t1.user_id,t1.user_account
        FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0 and t1.phone =#{phone,jdbcType=VARCHAR}
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(id)">
            and t1.id!=#{id}
        </if>
     </select>

    <select id="selectByMailbox" parameterType="map"
            resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
         SELECT
        t1.id, t1.employee_portrait, t1.`name`,
      t1.sex, t1.phone, t1.mailbox,
      t1.department_id, t1.department_name, t1.job_id,
      t1.job_name, t1.certificate_id, t1.certificate_type,
      t1.certificate_number, t1.post_id, t1.post_name,
      t1.job_number, t1.contract_id, t1.contract_name,
      t1.employee_type, t1.entry_date, t1.birth_date,
      t1.nationality_id, t1.nationality_name, t1.work_address,
      t1.contact_address, t1.certificate_name, t1.nation,
      t1.registered_type, t1.registered_residence, t1.native_place,
      t1.residential_address, t1.highest_academic, t1.political_outlook,
      t1.marital_status, t1.emergency_contact_name, t1.emergency_contact_phone,
      t1.QQ, t1.wechat, t1.start_current,
      t1.end_current, t1.work_mailbox, t1.work_phone,
      t1.expiration_date, t1.probation_period, t1.record_status,
      t1.creator_account, t1.created_time, t1.modifier_account,
      t1.modified_time,t1.user_id,t1.user_account
        FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0 and t1.mailbox =#{mailbox,jdbcType=VARCHAR}
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(id)">
            and t1.id!=#{id}
        </if>
     </select>

    <select id="selectByCertificateNumber" parameterType="map"
            resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
         SELECT
        t1.id, t1.employee_portrait, t1.`name`,
      t1.sex, t1.phone, t1.mailbox,
      t1.department_id, t1.department_name, t1.job_id,
      t1.job_name, t1.certificate_id, t1.certificate_type,
      t1.certificate_number, t1.post_id, t1.post_name,
      t1.job_number, t1.contract_id, t1.contract_name,
      t1.employee_type, t1.entry_date, t1.birth_date,
      t1.nationality_id, t1.nationality_name, t1.work_address,
      t1.contact_address, t1.certificate_name, t1.nation,
      t1.registered_type, t1.registered_residence, t1.native_place,
      t1.residential_address, t1.highest_academic, t1.political_outlook,
      t1.marital_status, t1.emergency_contact_name, t1.emergency_contact_phone,
      t1.QQ, t1.wechat, t1.start_current,
      t1.end_current, t1.work_mailbox, t1.work_phone,
      t1.expiration_date, t1.probation_period, t1.record_status,
      t1.creator_account, t1.created_time, t1.modifier_account,
      t1.modified_time,t1.user_id,t1.user_account
        FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0 and t1.certificate_number =#{certificateNumber,jdbcType=VARCHAR}
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(id)">
            and t1.id!=#{id}
        </if>
     </select>

     
     <select id="selectByUserId" parameterType="java.lang.String"
         resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
         SELECT * FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0 and t1.user_id =#{userId,jdbcType=VARCHAR}
     </select>
     
     <select id="selectByDepartment" parameterType="map" resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
         select * from tb_manpower_employee_basic_info where record_status=1
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(departmentId)">
            and department_id=#{departmentId}
        </if>
    </select>
     
     <select id="getList" parameterType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo"
            resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
        SELECT
       t1.id, t1.employee_portrait, t1.`name`,
      t1.sex, t1.phone, t1.mailbox,
      t1.department_id, t1.department_name, t1.job_id,
      t1.job_name, t1.certificate_id, t1.certificate_type,
      t1.certificate_number, t1.post_id, t1.post_name,
      t1.job_number, t1.contract_id, t1.contract_name,
      t1.employee_type, t1.entry_date, t1.birth_date,
      t1.nationality_id, t1.nationality_name, t1.work_address,
      t1.contact_address, t1.certificate_name, t1.nation,
      t1.registered_type, t1.registered_residence, t1.native_place,
      t1.residential_address, t1.highest_academic, t1.political_outlook,
      t1.marital_status, t1.emergency_contact_name, t1.emergency_contact_phone,
      t1.QQ, t1.wechat, t1.start_current,
      t1.end_current, t1.work_mailbox, t1.work_phone,
      t1.expiration_date, t1.probation_period, t1.record_status,
      t1.creator_account, t1.created_time, t1.modifier_account,
      t1.modified_time,employ_status, t1.user_id, t1.user_account
        FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(departmentId)">
            and t1.department_id =#{departmentId,jdbcType=VARCHAR}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(entryDate)">
            and t1.entry_date =#{entryDate,jdbcType=DATE}
      </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(name)">
            and t1.name like CONCAT('%', #{name,jdbcType=VARCHAR}, '%')
        </if>
         <if test="@org.apache.commons.lang.StringUtils@isNotBlank(jobNumber)">
             and t1.job_number =#{jobNumber,jdbcType=VARCHAR}
         </if>
        ORDER BY t1.created_time DESC
     </select>
     
     <select id="map" parameterType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo"
            resultType="com.jn.hr.employee.entity.TbManpowerEmployeeBasicInfo">
        SELECT
       t1.id, t1.employee_portrait, t1.`name`,
      t1.sex, t1.phone, t1.mailbox,
      t1.department_id, t1.department_name, t1.job_id,
      t1.job_name, t1.certificate_id, t1.certificate_type,
      t1.certificate_number, t1.post_id, t1.post_name,
      t1.job_number, t1.contract_id, t1.contract_name,
      t1.employee_type, t1.entry_date, t1.birth_date,
      t1.nationality_id, t1.nationality_name, t1.work_address,
      t1.contact_address, t1.certificate_name, t1.nation,
      t1.registered_type, t1.registered_residence, t1.native_place,
      t1.residential_address, t1.highest_academic, t1.political_outlook,
      t1.marital_status, t1.emergency_contact_name, t1.emergency_contact_phone,
      t1.QQ, t1.wechat, t1.start_current,
      t1.end_current, t1.work_mailbox, t1.work_phone,
      t1.expiration_date, t1.probation_period, t1.record_status,
      t1.creator_account, t1.created_time, t1.modifier_account,
      t1.modified_time,employ_status, t1.user_id, t1.user_account
        FROM
        `tb_manpower_employee_basic_info` t1
        WHERE t1.record_status != 0
        ORDER BY t1.created_time DESC,t1.id DESC
     </select>

    <select id="selectByEntryDate" parameterType="map" resultType="com.jn.hr.employee.model.EmployeeBasicInfo">
        SELECT
        id, employee_portrait, `name`, sex, phone, mailbox, department_id, department_name,
        job_id, job_name, certificate_id, certificate_type, certificate_number, post_id,
        post_name, job_number, contract_id, contract_name, employee_type, entry_date, birth_date,
        nationality_id, nationality_name, work_address, contact_address, certificate_name,
        nation, registered_type, registered_residence, native_place, residential_address,
        highest_academic, political_outlook, marital_status, emergency_contact_name, emergency_contact_phone,
        QQ, wechat, start_current, end_current, work_mailbox, work_phone, expiration_date,
        probation_period, record_status, creator_account, created_time, modifier_account,
        modified_time,employ_status, user_id, user_account
        FROM
        `tb_manpower_employee_basic_info`
        WHERE record_status=1
         and date_format(entry_date, '%m-%d')=#{entryDate}
    </select>

    <select id="selectCountByName" resultType="java.lang.Integer">
        select count(1) from tb_manpower_employee_basic_info where `name`=#{name}
    </select>

</mapper>