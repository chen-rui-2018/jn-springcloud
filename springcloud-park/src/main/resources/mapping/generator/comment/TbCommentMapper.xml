<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.park.comment.dao.TbCommentMapper">
  <resultMap id="BaseResultMap" type="com.jn.park.comment.entity.TbComment">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="root_id" jdbcType="VARCHAR" property="rootId" />
    <result column="p_id" jdbcType="VARCHAR" property="pId" />
    <result column="parent_account" jdbcType="VARCHAR" property="parentAccount" />
    <result column="creator_account" jdbcType="VARCHAR" property="creatorAccount" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="com_status" jdbcType="VARCHAR" property="comStatus" />
    <result column="com_type" jdbcType="VARCHAR" property="comType" />
    <result column="com_content" jdbcType="VARCHAR" property="comContent" />
    <result column="record_status" jdbcType="BIT" property="recordStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, root_id, p_id, parent_account, creator_account, created_time, like_num, com_status, 
    com_type, com_content, record_status
  </sql>
  <select id="selectByExample" parameterType="com.jn.park.comment.entity.TbCommentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.park.comment.entity.TbCommentCriteria">
    delete from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.park.comment.entity.TbComment">
    insert into tb_comment (id, root_id, p_id, 
      parent_account, creator_account, created_time, 
      like_num, com_status, com_type, 
      com_content, record_status)
    values (#{id,jdbcType=VARCHAR}, #{rootId,jdbcType=VARCHAR}, #{pId,jdbcType=VARCHAR}, 
      #{parentAccount,jdbcType=VARCHAR}, #{creatorAccount,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{likeNum,jdbcType=INTEGER}, #{comStatus,jdbcType=VARCHAR}, #{comType,jdbcType=VARCHAR}, 
      #{comContent,jdbcType=VARCHAR}, #{recordStatus,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.park.comment.entity.TbComment">
    insert into tb_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rootId != null">
        root_id,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="parentAccount != null">
        parent_account,
      </if>
      <if test="creatorAccount != null">
        creator_account,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="comStatus != null">
        com_status,
      </if>
      <if test="comType != null">
        com_type,
      </if>
      <if test="comContent != null">
        com_content,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="rootId != null">
        #{rootId,jdbcType=VARCHAR},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=VARCHAR},
      </if>
      <if test="parentAccount != null">
        #{parentAccount,jdbcType=VARCHAR},
      </if>
      <if test="creatorAccount != null">
        #{creatorAccount,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="comStatus != null">
        #{comStatus,jdbcType=VARCHAR},
      </if>
      <if test="comType != null">
        #{comType,jdbcType=VARCHAR},
      </if>
      <if test="comContent != null">
        #{comContent,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.park.comment.entity.TbCommentCriteria" resultType="java.lang.Long">
    select count(*) from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.rootId != null">
        root_id = #{record.rootId,jdbcType=VARCHAR},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentAccount != null">
        parent_account = #{record.parentAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorAccount != null">
        creator_account = #{record.creatorAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=INTEGER},
      </if>
      <if test="record.comStatus != null">
        com_status = #{record.comStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.comType != null">
        com_type = #{record.comType,jdbcType=VARCHAR},
      </if>
      <if test="record.comContent != null">
        com_content = #{record.comContent,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_comment
    set id = #{record.id,jdbcType=VARCHAR},
      root_id = #{record.rootId,jdbcType=VARCHAR},
      p_id = #{record.pId,jdbcType=VARCHAR},
      parent_account = #{record.parentAccount,jdbcType=VARCHAR},
      creator_account = #{record.creatorAccount,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      com_status = #{record.comStatus,jdbcType=VARCHAR},
      com_type = #{record.comType,jdbcType=VARCHAR},
      com_content = #{record.comContent,jdbcType=VARCHAR},
      record_status = #{record.recordStatus,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.park.comment.entity.TbComment">
    update tb_comment
    <set>
      <if test="rootId != null">
        root_id = #{rootId,jdbcType=VARCHAR},
      </if>
      <if test="pId != null">
        p_id = #{pId,jdbcType=VARCHAR},
      </if>
      <if test="parentAccount != null">
        parent_account = #{parentAccount,jdbcType=VARCHAR},
      </if>
      <if test="creatorAccount != null">
        creator_account = #{creatorAccount,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="comStatus != null">
        com_status = #{comStatus,jdbcType=VARCHAR},
      </if>
      <if test="comType != null">
        com_type = #{comType,jdbcType=VARCHAR},
      </if>
      <if test="comContent != null">
        com_content = #{comContent,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.park.comment.entity.TbComment">
    update tb_comment
    set root_id = #{rootId,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR},
      parent_account = #{parentAccount,jdbcType=VARCHAR},
      creator_account = #{creatorAccount,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      like_num = #{likeNum,jdbcType=INTEGER},
      com_status = #{comStatus,jdbcType=VARCHAR},
      com_type = #{comType,jdbcType=VARCHAR},
      com_content = #{comContent,jdbcType=VARCHAR},
      record_status = #{recordStatus,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>