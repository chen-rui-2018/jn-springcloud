<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.park.electric.dao.TbElectricReadingMapper">
  <resultMap id="BaseResultMap" type="com.jn.park.electric.entity.TbElectricReading">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="meter_code" jdbcType="VARCHAR" property="meterCode" />
    <result column="record_status" jdbcType="TINYINT" property="recordStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deal_date" jdbcType="DATE" property="dealDate" />
    <result column="degree_diff" jdbcType="DECIMAL" property="degreeDiff" />
    <result column="deal_hour" jdbcType="TINYINT" property="dealHour" />
    <result column="reading_end" jdbcType="DECIMAL" property="readingEnd" />
    <result column="time_end" jdbcType="TIMESTAMP" property="timeEnd" />
    <result column="param" jdbcType="VARCHAR" property="param" />
    <result column="building_id" jdbcType="VARCHAR" property="buildingId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="status_msg" jdbcType="VARCHAR" property="statusMsg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, meter_code, record_status, create_time, deal_date, degree_diff, deal_hour, reading_end, 
    time_end, param, building_id, status, status_msg
  </sql>
  <select id="selectByExample" parameterType="com.jn.park.electric.entity.TbElectricReadingCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_electric_reading
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_electric_reading
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_electric_reading
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.park.electric.entity.TbElectricReadingCriteria">
    delete from tb_electric_reading
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.park.electric.entity.TbElectricReading">
    insert into tb_electric_reading (id, meter_code, record_status, 
      create_time, deal_date, degree_diff, 
      deal_hour, reading_end, time_end, 
      param, building_id, status, 
      status_msg)
    values (#{id,jdbcType=VARCHAR}, #{meterCode,jdbcType=VARCHAR}, #{recordStatus,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{dealDate,jdbcType=DATE}, #{degreeDiff,jdbcType=DECIMAL}, 
      #{dealHour,jdbcType=TINYINT}, #{readingEnd,jdbcType=DECIMAL}, #{timeEnd,jdbcType=TIMESTAMP}, 
      #{param,jdbcType=VARCHAR}, #{buildingId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{statusMsg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.park.electric.entity.TbElectricReading">
    insert into tb_electric_reading
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="meterCode != null">
        meter_code,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="dealDate != null">
        deal_date,
      </if>
      <if test="degreeDiff != null">
        degree_diff,
      </if>
      <if test="dealHour != null">
        deal_hour,
      </if>
      <if test="readingEnd != null">
        reading_end,
      </if>
      <if test="timeEnd != null">
        time_end,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="statusMsg != null">
        status_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="meterCode != null">
        #{meterCode,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealDate != null">
        #{dealDate,jdbcType=DATE},
      </if>
      <if test="degreeDiff != null">
        #{degreeDiff,jdbcType=DECIMAL},
      </if>
      <if test="dealHour != null">
        #{dealHour,jdbcType=TINYINT},
      </if>
      <if test="readingEnd != null">
        #{readingEnd,jdbcType=DECIMAL},
      </if>
      <if test="timeEnd != null">
        #{timeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="statusMsg != null">
        #{statusMsg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.park.electric.entity.TbElectricReadingCriteria" resultType="java.lang.Long">
    select count(*) from tb_electric_reading
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_electric_reading
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.meterCode != null">
        meter_code = #{record.meterCode,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealDate != null">
        deal_date = #{record.dealDate,jdbcType=DATE},
      </if>
      <if test="record.degreeDiff != null">
        degree_diff = #{record.degreeDiff,jdbcType=DECIMAL},
      </if>
      <if test="record.dealHour != null">
        deal_hour = #{record.dealHour,jdbcType=TINYINT},
      </if>
      <if test="record.readingEnd != null">
        reading_end = #{record.readingEnd,jdbcType=DECIMAL},
      </if>
      <if test="record.timeEnd != null">
        time_end = #{record.timeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.param != null">
        param = #{record.param,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.statusMsg != null">
        status_msg = #{record.statusMsg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_electric_reading
    set id = #{record.id,jdbcType=VARCHAR},
      meter_code = #{record.meterCode,jdbcType=VARCHAR},
      record_status = #{record.recordStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      deal_date = #{record.dealDate,jdbcType=DATE},
      degree_diff = #{record.degreeDiff,jdbcType=DECIMAL},
      deal_hour = #{record.dealHour,jdbcType=TINYINT},
      reading_end = #{record.readingEnd,jdbcType=DECIMAL},
      time_end = #{record.timeEnd,jdbcType=TIMESTAMP},
      param = #{record.param,jdbcType=VARCHAR},
      building_id = #{record.buildingId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      status_msg = #{record.statusMsg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.park.electric.entity.TbElectricReading">
    update tb_electric_reading
    <set>
      <if test="meterCode != null">
        meter_code = #{meterCode,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealDate != null">
        deal_date = #{dealDate,jdbcType=DATE},
      </if>
      <if test="degreeDiff != null">
        degree_diff = #{degreeDiff,jdbcType=DECIMAL},
      </if>
      <if test="dealHour != null">
        deal_hour = #{dealHour,jdbcType=TINYINT},
      </if>
      <if test="readingEnd != null">
        reading_end = #{readingEnd,jdbcType=DECIMAL},
      </if>
      <if test="timeEnd != null">
        time_end = #{timeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="statusMsg != null">
        status_msg = #{statusMsg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.park.electric.entity.TbElectricReading">
    update tb_electric_reading
    set meter_code = #{meterCode,jdbcType=VARCHAR},
      record_status = #{recordStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deal_date = #{dealDate,jdbcType=DATE},
      degree_diff = #{degreeDiff,jdbcType=DECIMAL},
      deal_hour = #{dealHour,jdbcType=TINYINT},
      reading_end = #{readingEnd,jdbcType=DECIMAL},
      time_end = #{timeEnd,jdbcType=TIMESTAMP},
      param = #{param,jdbcType=VARCHAR},
      building_id = #{buildingId,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      status_msg = #{statusMsg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>