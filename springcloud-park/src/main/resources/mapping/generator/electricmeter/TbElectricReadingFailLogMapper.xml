<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.park.electricmeter.dao.TbElectricReadingFailLogMapper">
  <resultMap id="BaseResultMap" type="com.jn.park.electricmeter.entity.TbElectricReadingFailLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="record_status" jdbcType="TINYINT" property="recordStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deal_date" jdbcType="DATE" property="dealDate" />
    <result column="deal_hour" jdbcType="TINYINT" property="dealHour" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="param" jdbcType="VARCHAR" property="param" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, record_status, create_time, deal_date, deal_hour, status, param
  </sql>
  <select id="selectByExample" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLogCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_electric_reading_fail_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_electric_reading_fail_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_electric_reading_fail_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLogCriteria">
    delete from tb_electric_reading_fail_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLog">
    insert into tb_electric_reading_fail_log (id, record_status, create_time, 
      deal_date, deal_hour, status, 
      param)
    values (#{id,jdbcType=VARCHAR}, #{recordStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{dealDate,jdbcType=DATE}, #{dealHour,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{param,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLog">
    insert into tb_electric_reading_fail_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="dealDate != null">
        deal_date,
      </if>
      <if test="dealHour != null">
        deal_hour,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="param != null">
        param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealDate != null">
        #{dealDate,jdbcType=DATE},
      </if>
      <if test="dealHour != null">
        #{dealHour,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLogCriteria" resultType="java.lang.Long">
    select count(*) from tb_electric_reading_fail_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_electric_reading_fail_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealDate != null">
        deal_date = #{record.dealDate,jdbcType=DATE},
      </if>
      <if test="record.dealHour != null">
        deal_hour = #{record.dealHour,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.param != null">
        param = #{record.param,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_electric_reading_fail_log
    set id = #{record.id,jdbcType=VARCHAR},
      record_status = #{record.recordStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      deal_date = #{record.dealDate,jdbcType=DATE},
      deal_hour = #{record.dealHour,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      param = #{record.param,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLog">
    update tb_electric_reading_fail_log
    <set>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealDate != null">
        deal_date = #{dealDate,jdbcType=DATE},
      </if>
      <if test="dealHour != null">
        deal_hour = #{dealHour,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.park.electricmeter.entity.TbElectricReadingFailLog">
    update tb_electric_reading_fail_log
    set record_status = #{recordStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deal_date = #{dealDate,jdbcType=DATE},
      deal_hour = #{dealHour,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      param = #{param,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>