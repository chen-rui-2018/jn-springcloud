<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.park.finance.dao.TbFinanceBudgetHistoryMapper">
  <resultMap id="BaseResultMap" type="com.jn.park.finance.entity.TbFinanceBudgetHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cost_type_id" jdbcType="INTEGER" property="costTypeId" />
    <result column="cost_type_name" jdbcType="VARCHAR" property="costTypeName" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="budget_month" jdbcType="DATE" property="budgetMonth" />
    <result column="budget_money" jdbcType="DECIMAL" property="budgetMoney" />
    <result column="budget_Type" jdbcType="TINYINT" property="budgetType" />
    <result column="record_status" jdbcType="TINYINT" property="recordStatus" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="modifier_account" jdbcType="VARCHAR" property="modifierAccount" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="creator_account" jdbcType="VARCHAR" property="creatorAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cost_type_id, cost_type_name, department_id, department_name, budget_month, budget_money, 
    budget_Type, record_status, created_time, modifier_account, modified_time, creator_account
  </sql>
  <select id="selectByExample" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_finance_budget_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_finance_budget_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_finance_budget_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistoryExample">
    delete from tb_finance_budget_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_finance_budget_history (cost_type_id, cost_type_name, department_id, 
      department_name, budget_month, budget_money, 
      budget_Type, record_status, created_time, 
      modifier_account, modified_time, creator_account
      )
    values (#{costTypeId,jdbcType=INTEGER}, #{costTypeName,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, 
      #{departmentName,jdbcType=VARCHAR}, #{budgetMonth,jdbcType=DATE}, #{budgetMoney,jdbcType=DECIMAL}, 
      #{budgetType,jdbcType=TINYINT}, #{recordStatus,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{modifierAccount,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=TIMESTAMP}, #{creatorAccount,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_finance_budget_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="costTypeId != null">
        cost_type_id,
      </if>
      <if test="costTypeName != null">
        cost_type_name,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="budgetMonth != null">
        budget_month,
      </if>
      <if test="budgetMoney != null">
        budget_money,
      </if>
      <if test="budgetType != null">
        budget_Type,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="modifierAccount != null">
        modifier_account,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="creatorAccount != null">
        creator_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="costTypeId != null">
        #{costTypeId,jdbcType=INTEGER},
      </if>
      <if test="costTypeName != null">
        #{costTypeName,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="budgetMonth != null">
        #{budgetMonth,jdbcType=DATE},
      </if>
      <if test="budgetMoney != null">
        #{budgetMoney,jdbcType=DECIMAL},
      </if>
      <if test="budgetType != null">
        #{budgetType,jdbcType=TINYINT},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierAccount != null">
        #{modifierAccount,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorAccount != null">
        #{creatorAccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistoryExample" resultType="java.lang.Long">
    select count(*) from tb_finance_budget_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_finance_budget_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.costTypeId != null">
        cost_type_id = #{record.costTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.costTypeName != null">
        cost_type_name = #{record.costTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetMonth != null">
        budget_month = #{record.budgetMonth,jdbcType=DATE},
      </if>
      <if test="record.budgetMoney != null">
        budget_money = #{record.budgetMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.budgetType != null">
        budget_Type = #{record.budgetType,jdbcType=TINYINT},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifierAccount != null">
        modifier_account = #{record.modifierAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorAccount != null">
        creator_account = #{record.creatorAccount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_finance_budget_history
    set id = #{record.id,jdbcType=INTEGER},
      cost_type_id = #{record.costTypeId,jdbcType=INTEGER},
      cost_type_name = #{record.costTypeName,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=VARCHAR},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      budget_month = #{record.budgetMonth,jdbcType=DATE},
      budget_money = #{record.budgetMoney,jdbcType=DECIMAL},
      budget_Type = #{record.budgetType,jdbcType=TINYINT},
      record_status = #{record.recordStatus,jdbcType=TINYINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modifier_account = #{record.modifierAccount,jdbcType=VARCHAR},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      creator_account = #{record.creatorAccount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistory">
    update tb_finance_budget_history
    <set>
      <if test="costTypeId != null">
        cost_type_id = #{costTypeId,jdbcType=INTEGER},
      </if>
      <if test="costTypeName != null">
        cost_type_name = #{costTypeName,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="budgetMonth != null">
        budget_month = #{budgetMonth,jdbcType=DATE},
      </if>
      <if test="budgetMoney != null">
        budget_money = #{budgetMoney,jdbcType=DECIMAL},
      </if>
      <if test="budgetType != null">
        budget_Type = #{budgetType,jdbcType=TINYINT},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierAccount != null">
        modifier_account = #{modifierAccount,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorAccount != null">
        creator_account = #{creatorAccount,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.park.finance.entity.TbFinanceBudgetHistory">
    update tb_finance_budget_history
    set cost_type_id = #{costTypeId,jdbcType=INTEGER},
      cost_type_name = #{costTypeName,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},
      department_name = #{departmentName,jdbcType=VARCHAR},
      budget_month = #{budgetMonth,jdbcType=DATE},
      budget_money = #{budgetMoney,jdbcType=DECIMAL},
      budget_Type = #{budgetType,jdbcType=TINYINT},
      record_status = #{recordStatus,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modifier_account = #{modifierAccount,jdbcType=VARCHAR},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      creator_account = #{creatorAccount,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>