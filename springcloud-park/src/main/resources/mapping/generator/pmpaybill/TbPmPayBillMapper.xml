<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.park.pmpaybill.dao.TbPmPayBillMapper">
  <resultMap id="BaseResultMap" type="com.jn.park.pmpaybill.entity.TbPmPayBill">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_address" jdbcType="VARCHAR" property="companyAddress" />
    <result column="building_id" jdbcType="VARCHAR" property="buildingId" />
    <result column="building_name" jdbcType="VARCHAR" property="buildingName" />
    <result column="deal_date" jdbcType="VARCHAR" property="dealDate" />
    <result column="bill_amount" jdbcType="DECIMAL" property="billAmount" />
    <result column="free_amount" jdbcType="DECIMAL" property="freeAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="last_pay_time" jdbcType="TIMESTAMP" property="lastPayTime" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="is_expire" jdbcType="TINYINT" property="isExpire" />
    <result column="generate_satus" jdbcType="TINYINT" property="generateSatus" />
    <result column="derate_state" jdbcType="TINYINT" property="derateState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company_id, company_name, company_address, building_id, building_name, deal_date, 
    bill_amount, free_amount, total_amount, last_pay_time, pay_status, is_expire, generate_satus, 
    derate_state
  </sql>
  <select id="selectByExample" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBillCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_pm_pay_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_pm_pay_bill
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_pm_pay_bill
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBillCriteria">
    delete from tb_pm_pay_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBill">
    insert into tb_pm_pay_bill (id, company_id, company_name, 
      company_address, building_id, building_name, 
      deal_date, bill_amount, free_amount, 
      total_amount, last_pay_time, pay_status, 
      is_expire, generate_satus, derate_state
      )
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{companyAddress,jdbcType=VARCHAR}, #{buildingId,jdbcType=VARCHAR}, #{buildingName,jdbcType=VARCHAR}, 
      #{dealDate,jdbcType=VARCHAR}, #{billAmount,jdbcType=DECIMAL}, #{freeAmount,jdbcType=DECIMAL}, 
      #{totalAmount,jdbcType=DECIMAL}, #{lastPayTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=TINYINT}, 
      #{isExpire,jdbcType=TINYINT}, #{generateSatus,jdbcType=TINYINT}, #{derateState,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBill">
    insert into tb_pm_pay_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyAddress != null">
        company_address,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="buildingName != null">
        building_name,
      </if>
      <if test="dealDate != null">
        deal_date,
      </if>
      <if test="billAmount != null">
        bill_amount,
      </if>
      <if test="freeAmount != null">
        free_amount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="lastPayTime != null">
        last_pay_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="isExpire != null">
        is_expire,
      </if>
      <if test="generateSatus != null">
        generate_satus,
      </if>
      <if test="derateState != null">
        derate_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="buildingName != null">
        #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="dealDate != null">
        #{dealDate,jdbcType=VARCHAR},
      </if>
      <if test="billAmount != null">
        #{billAmount,jdbcType=DECIMAL},
      </if>
      <if test="freeAmount != null">
        #{freeAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="lastPayTime != null">
        #{lastPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="isExpire != null">
        #{isExpire,jdbcType=TINYINT},
      </if>
      <if test="generateSatus != null">
        #{generateSatus,jdbcType=TINYINT},
      </if>
      <if test="derateState != null">
        #{derateState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBillCriteria" resultType="java.lang.Long">
    select count(*) from tb_pm_pay_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_pm_pay_bill
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddress != null">
        company_address = #{record.companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingName != null">
        building_name = #{record.buildingName,jdbcType=VARCHAR},
      </if>
      <if test="record.dealDate != null">
        deal_date = #{record.dealDate,jdbcType=VARCHAR},
      </if>
      <if test="record.billAmount != null">
        bill_amount = #{record.billAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.freeAmount != null">
        free_amount = #{record.freeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.lastPayTime != null">
        last_pay_time = #{record.lastPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.isExpire != null">
        is_expire = #{record.isExpire,jdbcType=TINYINT},
      </if>
      <if test="record.generateSatus != null">
        generate_satus = #{record.generateSatus,jdbcType=TINYINT},
      </if>
      <if test="record.derateState != null">
        derate_state = #{record.derateState,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_pm_pay_bill
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_address = #{record.companyAddress,jdbcType=VARCHAR},
      building_id = #{record.buildingId,jdbcType=VARCHAR},
      building_name = #{record.buildingName,jdbcType=VARCHAR},
      deal_date = #{record.dealDate,jdbcType=VARCHAR},
      bill_amount = #{record.billAmount,jdbcType=DECIMAL},
      free_amount = #{record.freeAmount,jdbcType=DECIMAL},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      last_pay_time = #{record.lastPayTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      is_expire = #{record.isExpire,jdbcType=TINYINT},
      generate_satus = #{record.generateSatus,jdbcType=TINYINT},
      derate_state = #{record.derateState,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBill">
    update tb_pm_pay_bill
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="buildingName != null">
        building_name = #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="dealDate != null">
        deal_date = #{dealDate,jdbcType=VARCHAR},
      </if>
      <if test="billAmount != null">
        bill_amount = #{billAmount,jdbcType=DECIMAL},
      </if>
      <if test="freeAmount != null">
        free_amount = #{freeAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="lastPayTime != null">
        last_pay_time = #{lastPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="isExpire != null">
        is_expire = #{isExpire,jdbcType=TINYINT},
      </if>
      <if test="generateSatus != null">
        generate_satus = #{generateSatus,jdbcType=TINYINT},
      </if>
      <if test="derateState != null">
        derate_state = #{derateState,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.park.pmpaybill.entity.TbPmPayBill">
    update tb_pm_pay_bill
    set company_id = #{companyId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      building_id = #{buildingId,jdbcType=VARCHAR},
      building_name = #{buildingName,jdbcType=VARCHAR},
      deal_date = #{dealDate,jdbcType=VARCHAR},
      bill_amount = #{billAmount,jdbcType=DECIMAL},
      free_amount = #{freeAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      last_pay_time = #{lastPayTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=TINYINT},
      is_expire = #{isExpire,jdbcType=TINYINT},
      generate_satus = #{generateSatus,jdbcType=TINYINT},
      derate_state = #{derateState,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>