<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jn.park.policy.dao.TbPolicyMapper">
  <resultMap id="BaseResultMap" type="com.jn.park.policy.entity.TbPolicy">
    <id column="policy_id" jdbcType="VARCHAR" property="policyId" />
    <result column="policy_code" jdbcType="VARCHAR" property="policyCode" />
    <result column="policy_level_code" jdbcType="VARCHAR" property="policyLevelCode" />
    <result column="policy_level_name" jdbcType="VARCHAR" property="policyLevelName" />
    <result column="policy_class_code" jdbcType="VARCHAR" property="policyClassCode" />
    <result column="policy_class_name" jdbcType="VARCHAR" property="policyClassName" />
    <result column="policy_type" jdbcType="VARCHAR" property="policyType" />
    <result column="policy_diagram_url" jdbcType="VARCHAR" property="policyDiagramUrl" />
    <result column="thematic_type" jdbcType="VARCHAR" property="thematicType" />
    <result column="policy_title" jdbcType="VARCHAR" property="policyTitle" />
    <result column="policy_issu_num" jdbcType="VARCHAR" property="policyIssuNum" />
    <result column="read_num" jdbcType="INTEGER" property="readNum" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="support_method" jdbcType="VARCHAR" property="supportMethod" />
    <result column="support_industry" jdbcType="VARCHAR" property="supportIndustry" />
    <result column="issue_unit" jdbcType="VARCHAR" property="issueUnit" />
    <result column="is_policy_diagram" jdbcType="VARCHAR" property="isPolicyDiagram" />
    <result column="relation_policy_diagram_id" jdbcType="VARCHAR" property="relationPolicyDiagramId" />
    <result column="is_policy_original" jdbcType="VARCHAR" property="isPolicyOriginal" />
    <result column="relation_policy_original_id" jdbcType="VARCHAR" property="relationPolicyOriginalId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="creator_account" jdbcType="VARCHAR" property="creatorAccount" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="modifier_account" jdbcType="VARCHAR" property="modifierAccount" />
    <result column="record_status" jdbcType="TINYINT" property="recordStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    policy_id, policy_code, policy_level_code, policy_level_name, policy_class_code, 
    policy_class_name, policy_type, policy_diagram_url, thematic_type, policy_title, 
    policy_issu_num, read_num, release_date, status, support_method, support_industry, 
    issue_unit, is_policy_diagram, relation_policy_diagram_id, is_policy_original, relation_policy_original_id, 
    created_time, creator_account, modified_time, modifier_account, record_status
  </sql>
  <select id="selectByExample" parameterType="com.jn.park.policy.entity.TbPolicyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_policy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_policy
    where policy_id = #{policyId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_policy
    where policy_id = #{policyId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jn.park.policy.entity.TbPolicyCriteria">
    delete from tb_policy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jn.park.policy.entity.TbPolicy">
    insert into tb_policy (policy_id, policy_code, policy_level_code, 
      policy_level_name, policy_class_code, policy_class_name, 
      policy_type, policy_diagram_url, thematic_type, 
      policy_title, policy_issu_num, read_num, 
      release_date, status, support_method, 
      support_industry, issue_unit, is_policy_diagram, 
      relation_policy_diagram_id, is_policy_original, 
      relation_policy_original_id, created_time, 
      creator_account, modified_time, modifier_account, 
      record_status)
    values (#{policyId,jdbcType=VARCHAR}, #{policyCode,jdbcType=VARCHAR}, #{policyLevelCode,jdbcType=VARCHAR}, 
      #{policyLevelName,jdbcType=VARCHAR}, #{policyClassCode,jdbcType=VARCHAR}, #{policyClassName,jdbcType=VARCHAR}, 
      #{policyType,jdbcType=VARCHAR}, #{policyDiagramUrl,jdbcType=VARCHAR}, #{thematicType,jdbcType=VARCHAR}, 
      #{policyTitle,jdbcType=VARCHAR}, #{policyIssuNum,jdbcType=VARCHAR}, #{readNum,jdbcType=INTEGER}, 
      #{releaseDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{supportMethod,jdbcType=VARCHAR}, 
      #{supportIndustry,jdbcType=VARCHAR}, #{issueUnit,jdbcType=VARCHAR}, #{isPolicyDiagram,jdbcType=VARCHAR}, 
      #{relationPolicyDiagramId,jdbcType=VARCHAR}, #{isPolicyOriginal,jdbcType=VARCHAR}, 
      #{relationPolicyOriginalId,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{creatorAccount,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=TIMESTAMP}, #{modifierAccount,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jn.park.policy.entity.TbPolicy">
    insert into tb_policy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="policyId != null">
        policy_id,
      </if>
      <if test="policyCode != null">
        policy_code,
      </if>
      <if test="policyLevelCode != null">
        policy_level_code,
      </if>
      <if test="policyLevelName != null">
        policy_level_name,
      </if>
      <if test="policyClassCode != null">
        policy_class_code,
      </if>
      <if test="policyClassName != null">
        policy_class_name,
      </if>
      <if test="policyType != null">
        policy_type,
      </if>
      <if test="policyDiagramUrl != null">
        policy_diagram_url,
      </if>
      <if test="thematicType != null">
        thematic_type,
      </if>
      <if test="policyTitle != null">
        policy_title,
      </if>
      <if test="policyIssuNum != null">
        policy_issu_num,
      </if>
      <if test="readNum != null">
        read_num,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="supportMethod != null">
        support_method,
      </if>
      <if test="supportIndustry != null">
        support_industry,
      </if>
      <if test="issueUnit != null">
        issue_unit,
      </if>
      <if test="isPolicyDiagram != null">
        is_policy_diagram,
      </if>
      <if test="relationPolicyDiagramId != null">
        relation_policy_diagram_id,
      </if>
      <if test="isPolicyOriginal != null">
        is_policy_original,
      </if>
      <if test="relationPolicyOriginalId != null">
        relation_policy_original_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="creatorAccount != null">
        creator_account,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="modifierAccount != null">
        modifier_account,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="policyId != null">
        #{policyId,jdbcType=VARCHAR},
      </if>
      <if test="policyCode != null">
        #{policyCode,jdbcType=VARCHAR},
      </if>
      <if test="policyLevelCode != null">
        #{policyLevelCode,jdbcType=VARCHAR},
      </if>
      <if test="policyLevelName != null">
        #{policyLevelName,jdbcType=VARCHAR},
      </if>
      <if test="policyClassCode != null">
        #{policyClassCode,jdbcType=VARCHAR},
      </if>
      <if test="policyClassName != null">
        #{policyClassName,jdbcType=VARCHAR},
      </if>
      <if test="policyType != null">
        #{policyType,jdbcType=VARCHAR},
      </if>
      <if test="policyDiagramUrl != null">
        #{policyDiagramUrl,jdbcType=VARCHAR},
      </if>
      <if test="thematicType != null">
        #{thematicType,jdbcType=VARCHAR},
      </if>
      <if test="policyTitle != null">
        #{policyTitle,jdbcType=VARCHAR},
      </if>
      <if test="policyIssuNum != null">
        #{policyIssuNum,jdbcType=VARCHAR},
      </if>
      <if test="readNum != null">
        #{readNum,jdbcType=INTEGER},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="supportMethod != null">
        #{supportMethod,jdbcType=VARCHAR},
      </if>
      <if test="supportIndustry != null">
        #{supportIndustry,jdbcType=VARCHAR},
      </if>
      <if test="issueUnit != null">
        #{issueUnit,jdbcType=VARCHAR},
      </if>
      <if test="isPolicyDiagram != null">
        #{isPolicyDiagram,jdbcType=VARCHAR},
      </if>
      <if test="relationPolicyDiagramId != null">
        #{relationPolicyDiagramId,jdbcType=VARCHAR},
      </if>
      <if test="isPolicyOriginal != null">
        #{isPolicyOriginal,jdbcType=VARCHAR},
      </if>
      <if test="relationPolicyOriginalId != null">
        #{relationPolicyOriginalId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorAccount != null">
        #{creatorAccount,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierAccount != null">
        #{modifierAccount,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jn.park.policy.entity.TbPolicyCriteria" resultType="java.lang.Long">
    select count(*) from tb_policy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_policy
    <set>
      <if test="record.policyId != null">
        policy_id = #{record.policyId,jdbcType=VARCHAR},
      </if>
      <if test="record.policyCode != null">
        policy_code = #{record.policyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.policyLevelCode != null">
        policy_level_code = #{record.policyLevelCode,jdbcType=VARCHAR},
      </if>
      <if test="record.policyLevelName != null">
        policy_level_name = #{record.policyLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.policyClassCode != null">
        policy_class_code = #{record.policyClassCode,jdbcType=VARCHAR},
      </if>
      <if test="record.policyClassName != null">
        policy_class_name = #{record.policyClassName,jdbcType=VARCHAR},
      </if>
      <if test="record.policyType != null">
        policy_type = #{record.policyType,jdbcType=VARCHAR},
      </if>
      <if test="record.policyDiagramUrl != null">
        policy_diagram_url = #{record.policyDiagramUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.thematicType != null">
        thematic_type = #{record.thematicType,jdbcType=VARCHAR},
      </if>
      <if test="record.policyTitle != null">
        policy_title = #{record.policyTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.policyIssuNum != null">
        policy_issu_num = #{record.policyIssuNum,jdbcType=VARCHAR},
      </if>
      <if test="record.readNum != null">
        read_num = #{record.readNum,jdbcType=INTEGER},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.supportMethod != null">
        support_method = #{record.supportMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.supportIndustry != null">
        support_industry = #{record.supportIndustry,jdbcType=VARCHAR},
      </if>
      <if test="record.issueUnit != null">
        issue_unit = #{record.issueUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.isPolicyDiagram != null">
        is_policy_diagram = #{record.isPolicyDiagram,jdbcType=VARCHAR},
      </if>
      <if test="record.relationPolicyDiagramId != null">
        relation_policy_diagram_id = #{record.relationPolicyDiagramId,jdbcType=VARCHAR},
      </if>
      <if test="record.isPolicyOriginal != null">
        is_policy_original = #{record.isPolicyOriginal,jdbcType=VARCHAR},
      </if>
      <if test="record.relationPolicyOriginalId != null">
        relation_policy_original_id = #{record.relationPolicyOriginalId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorAccount != null">
        creator_account = #{record.creatorAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifierAccount != null">
        modifier_account = #{record.modifierAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_policy
    set policy_id = #{record.policyId,jdbcType=VARCHAR},
      policy_code = #{record.policyCode,jdbcType=VARCHAR},
      policy_level_code = #{record.policyLevelCode,jdbcType=VARCHAR},
      policy_level_name = #{record.policyLevelName,jdbcType=VARCHAR},
      policy_class_code = #{record.policyClassCode,jdbcType=VARCHAR},
      policy_class_name = #{record.policyClassName,jdbcType=VARCHAR},
      policy_type = #{record.policyType,jdbcType=VARCHAR},
      policy_diagram_url = #{record.policyDiagramUrl,jdbcType=VARCHAR},
      thematic_type = #{record.thematicType,jdbcType=VARCHAR},
      policy_title = #{record.policyTitle,jdbcType=VARCHAR},
      policy_issu_num = #{record.policyIssuNum,jdbcType=VARCHAR},
      read_num = #{record.readNum,jdbcType=INTEGER},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      support_method = #{record.supportMethod,jdbcType=VARCHAR},
      support_industry = #{record.supportIndustry,jdbcType=VARCHAR},
      issue_unit = #{record.issueUnit,jdbcType=VARCHAR},
      is_policy_diagram = #{record.isPolicyDiagram,jdbcType=VARCHAR},
      relation_policy_diagram_id = #{record.relationPolicyDiagramId,jdbcType=VARCHAR},
      is_policy_original = #{record.isPolicyOriginal,jdbcType=VARCHAR},
      relation_policy_original_id = #{record.relationPolicyOriginalId,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      creator_account = #{record.creatorAccount,jdbcType=VARCHAR},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      modifier_account = #{record.modifierAccount,jdbcType=VARCHAR},
      record_status = #{record.recordStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jn.park.policy.entity.TbPolicy">
    update tb_policy
    <set>
      <if test="policyCode != null">
        policy_code = #{policyCode,jdbcType=VARCHAR},
      </if>
      <if test="policyLevelCode != null">
        policy_level_code = #{policyLevelCode,jdbcType=VARCHAR},
      </if>
      <if test="policyLevelName != null">
        policy_level_name = #{policyLevelName,jdbcType=VARCHAR},
      </if>
      <if test="policyClassCode != null">
        policy_class_code = #{policyClassCode,jdbcType=VARCHAR},
      </if>
      <if test="policyClassName != null">
        policy_class_name = #{policyClassName,jdbcType=VARCHAR},
      </if>
      <if test="policyType != null">
        policy_type = #{policyType,jdbcType=VARCHAR},
      </if>
      <if test="policyDiagramUrl != null">
        policy_diagram_url = #{policyDiagramUrl,jdbcType=VARCHAR},
      </if>
      <if test="thematicType != null">
        thematic_type = #{thematicType,jdbcType=VARCHAR},
      </if>
      <if test="policyTitle != null">
        policy_title = #{policyTitle,jdbcType=VARCHAR},
      </if>
      <if test="policyIssuNum != null">
        policy_issu_num = #{policyIssuNum,jdbcType=VARCHAR},
      </if>
      <if test="readNum != null">
        read_num = #{readNum,jdbcType=INTEGER},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="supportMethod != null">
        support_method = #{supportMethod,jdbcType=VARCHAR},
      </if>
      <if test="supportIndustry != null">
        support_industry = #{supportIndustry,jdbcType=VARCHAR},
      </if>
      <if test="issueUnit != null">
        issue_unit = #{issueUnit,jdbcType=VARCHAR},
      </if>
      <if test="isPolicyDiagram != null">
        is_policy_diagram = #{isPolicyDiagram,jdbcType=VARCHAR},
      </if>
      <if test="relationPolicyDiagramId != null">
        relation_policy_diagram_id = #{relationPolicyDiagramId,jdbcType=VARCHAR},
      </if>
      <if test="isPolicyOriginal != null">
        is_policy_original = #{isPolicyOriginal,jdbcType=VARCHAR},
      </if>
      <if test="relationPolicyOriginalId != null">
        relation_policy_original_id = #{relationPolicyOriginalId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorAccount != null">
        creator_account = #{creatorAccount,jdbcType=VARCHAR},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierAccount != null">
        modifier_account = #{modifierAccount,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=TINYINT},
      </if>
    </set>
    where policy_id = #{policyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jn.park.policy.entity.TbPolicy">
    update tb_policy
    set policy_code = #{policyCode,jdbcType=VARCHAR},
      policy_level_code = #{policyLevelCode,jdbcType=VARCHAR},
      policy_level_name = #{policyLevelName,jdbcType=VARCHAR},
      policy_class_code = #{policyClassCode,jdbcType=VARCHAR},
      policy_class_name = #{policyClassName,jdbcType=VARCHAR},
      policy_type = #{policyType,jdbcType=VARCHAR},
      policy_diagram_url = #{policyDiagramUrl,jdbcType=VARCHAR},
      thematic_type = #{thematicType,jdbcType=VARCHAR},
      policy_title = #{policyTitle,jdbcType=VARCHAR},
      policy_issu_num = #{policyIssuNum,jdbcType=VARCHAR},
      read_num = #{readNum,jdbcType=INTEGER},
      release_date = #{releaseDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      support_method = #{supportMethod,jdbcType=VARCHAR},
      support_industry = #{supportIndustry,jdbcType=VARCHAR},
      issue_unit = #{issueUnit,jdbcType=VARCHAR},
      is_policy_diagram = #{isPolicyDiagram,jdbcType=VARCHAR},
      relation_policy_diagram_id = #{relationPolicyDiagramId,jdbcType=VARCHAR},
      is_policy_original = #{isPolicyOriginal,jdbcType=VARCHAR},
      relation_policy_original_id = #{relationPolicyOriginalId,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      creator_account = #{creatorAccount,jdbcType=VARCHAR},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      modifier_account = #{modifierAccount,jdbcType=VARCHAR},
      record_status = #{recordStatus,jdbcType=TINYINT}
    where policy_id = #{policyId,jdbcType=VARCHAR}
  </update>
</mapper>